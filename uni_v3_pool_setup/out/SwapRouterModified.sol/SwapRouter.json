{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_WETH9",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WETH9",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOutMinimum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactInputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "path",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutput",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenIn",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountInMaximum",
              "type": "uint256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct ISwapRouter.ExactOutputSingleParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "exactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowed",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitAllowedIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "selfPermitIfNecessary",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "sweepToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "sweepTokenWithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "amount0Delta",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "amount1Delta",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV3SwapCallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountMinimum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "feeBips",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "feeRecipient",
          "type": "address"
        }
      ],
      "name": "unwrapWETH9WithFee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526000196000553480156200001757600080fd5b50604051620028c5380380620028c58339810160408190526200003a916200006f565b6001600160a01b039182166080521660a052620000a7565b80516001600160a01b03811681146200006a57600080fd5b919050565b600080604083850312156200008357600080fd5b6200008e8362000052565b91506200009e6020840162000052565b90509250929050565b60805160a0516127b26200011360003960008181610112015281816101dd01528181610507015281816105dd01528181610682015281816107580152818161163b01528181611681015261171601526000818161029501528181610ff801526117c001526127b26000f3fe6080604052600436106101025760003560e01c8063c04b8d5911610095578063df2ab5bb11610064578063df2ab5bb146102ca578063e0e189a0146102dd578063f28c0498146102f0578063f3995c6714610303578063fa461e331461031657600080fd5b8063c04b8d591461025d578063c2e3140a14610270578063c45a015514610283578063db3e2198146102b757600080fd5b80634aa4a4fc116100d15780634aa4a4fc146101cb5780639b2c0a3714610217578063a4a78f0c1461022a578063ac9650d81461023d57600080fd5b806312210e8a14610177578063414bf3891461017f5780634659a494146101a557806349404b7c146101b857600080fd5b3661017257336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101705760405162461bcd60e51b81526020600482015260096024820152684e6f7420574554483960b81b60448201526064015b60405180910390fd5b005b600080fd5b610170610336565b61019261018d366004611e05565b610348565b6040519081526020015b60405180910390f35b6101706101b3366004611e3e565b61045a565b6101706101c6366004611ea0565b6104ef565b3480156101d757600080fd5b506101ff7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161019c565b610170610225366004611ed0565b610650565b610170610238366004611e3e565b610805565b61025061024b366004611f1a565b61088b565b60405161019c9190611fe7565b61019261026b366004612137565b6109e3565b61017061027e366004611e3e565b610af1565b34801561028f57600080fd5b506101ff7f000000000000000000000000000000000000000000000000000000000000000081565b6101926102c5366004611e05565b610b75565b6101706102d83660046121db565b610c8f565b6101706102eb36600461221d565b610d58565b6101926102fe36600461227c565b610e73565b610170610311366004611e3e565b610f5c565b34801561032257600080fd5b506101706103313660046122b7565b610fb3565b47156103465761034633476110c6565b565b600060808201358042111561036f5760405162461bcd60e51b815260040161016790612337565b61040860a08401356103876080860160608701612364565b610398610100870160e08801612364565b60408051808201909152806103b060208a018a612364565b6103c060608b0160408c01612381565b6103d060408c0160208d01612364565b6040516020016103e2939291906123a6565b6040516020818303038152906040528152602001336001600160a01b0316815250611169565b91508260c001358210156104545760405162461bcd60e51b8152602060048201526013602482015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b6044820152606401610167565b50919050565b6040516323f2ebc360e21b815233600482015230602482015260448101869052606481018590526001608482015260ff841660a482015260c4810183905260e481018290526001600160a01b03871690638fcbaf0c90610104015b600060405180830381600087803b1580156104cf57600080fd5b505af11580156104e3573d6000803e3d6000fd5b50505050505050505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057a91906123e1565b9050828110156105c15760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b6044820152606401610167565b801561064b57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561062957600080fd5b505af115801561063d573d6000803e3d6000fd5b5050505061064b82826110c6565b505050565b600082118015610661575060648211155b61066a57600080fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156106d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f591906123e1565b90508481101561073c5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e7420574554483960701b6044820152606401610167565b80156107fe57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156107a457600080fd5b505af11580156107b8573d6000803e3d6000fd5b50505050600061271084836107cd9190612410565b6107d7919061242f565b905080156107e9576107e983826110c6565b6107fc856107f78385612451565b6110c6565b505b5050505050565b604051636eb1769f60e11b8152336004820152306024820152600019906001600160a01b0388169063dd62ed3e90604401602060405180830381865afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087791906123e1565b10156107fc576107fc86868686868661045a565b60608167ffffffffffffffff8111156108a6576108a6612049565b6040519080825280602002602001820160405280156108d957816020015b60608152602001906001900390816108c45790505b50905060005b828110156109dc57600080308686858181106108fd576108fd612468565b905060200281019061090f919061247e565b60405161091d9291906124cc565b600060405180830381855af49150503d8060008114610958576040519150601f19603f3d011682016040523d82523d6000602084013e61095d565b606091505b5091509150816109a95760448151101561097657600080fd5b6004810190508080602001905181019061099091906124dc565b60405162461bcd60e51b8152600401610167919061254a565b808484815181106109bc576109bc612468565b6020026020010181905250505080806109d49061255d565b9150506108df565b5092915050565b60008160400151806109f24290565b1115610a105760405162461bcd60e51b815260040161016790612337565b335b6000610a2185600001516112c5565b9050610a6d856060015182610a3a578660200151610a3c565b305b60006040518060400160405280610a568b600001516112ff565b8152602001876001600160a01b0316815250611169565b60608601528015610a8d578451309250610a869061132b565b8552610a9a565b8460600151935050610aa0565b50610a12565b8360800151831015610aea5760405162461bcd60e51b8152602060048201526013602482015272151bdbc81b1a5d1d1b19481c9958d95a5d9959606a1b6044820152606401610167565b5050919050565b604051636eb1769f60e11b815233600482015230602482015285906001600160a01b0388169063dd62ed3e90604401602060405180830381865afa158015610b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6191906123e1565b10156107fc576107fc868686868686610f5c565b6000608082013580421115610b9c5760405162461bcd60e51b815260040161016790612337565b610c3860a0840135610bb46080860160608701612364565b610bc5610100870160e08801612364565b6040518060400160405280886020016020810190610be39190612364565b610bf360608b0160408c01612381565b610c0060208c018c612364565b604051602001610c12939291906123a6565b6040516020818303038152906040528152602001336001600160a01b0316815250611354565b91508260c00135821115610c835760405162461bcd60e51b8152602060048201526012602482015271151bdbc81b5d58da081c995c5d595cdd195960721b6044820152606401610167565b50600019600055919050565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa158015610cd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfa91906123e1565b905082811015610d415760405162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b6044820152606401610167565b8015610d5257610d528483836114e5565b50505050565b600082118015610d69575060648211155b610d7257600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610db9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddd91906123e1565b905084811015610e245760405162461bcd60e51b815260206004820152601260248201527124b739bab33334b1b4b2b73a103a37b5b2b760711b6044820152606401610167565b80156107fc576000612710610e398584612410565b610e43919061242f565b90508015610e5657610e568784836114e5565b610e6a8786610e658486612451565b6114e5565b50505050505050565b6000604082013580421115610e9a5760405162461bcd60e51b815260040161016790612337565b610f0d6060840135610eb26040860160208701612364565b6040805180820190915260009080610eca898061247e565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525033602090910152611354565b5060005491508260800135821115610c835760405162461bcd60e51b8152602060048201526012602482015271151bdbc81b5d58da081c995c5d595cdd195960721b6044820152606401610167565b60405163d505accf60e01b8152336004820152306024820152604481018690526064810185905260ff8416608482015260a4810183905260c481018290526001600160a01b0387169063d505accf9060e4016104b5565b6000841380610fc25750600083135b610fcb57600080fd5b6000610fd982840184612576565b90506000806000610fed84600001516115de565b92509250925061101f7f000000000000000000000000000000000000000000000000000000000000000084848461161a565b5060008060008a1361104657846001600160a01b0316846001600160a01b0316108961105d565b836001600160a01b0316856001600160a01b0316108a5b91509150811561107c576110778587602001513384611639565b6104e3565b8551611087906112c5565b156110ac5785516110979061132b565b86526110a68133600089611354565b506104e3565b806000819055508394506104e38587602001513384611639565b604080516000808252602082019092526001600160a01b0384169083906040516110f09190612610565b60006040518083038185875af1925050503d806000811461112d576040519150601f19603f3d011682016040523d82523d6000602084013e611132565b606091505b505090508061064b5760405162461bcd60e51b815260206004820152600360248201526253544560e81b6044820152606401610167565b60006001600160a01b03841661117d573093505b600080600061118f85600001516115de565b919450925090506001600160a01b03808316908416106000806111b38686866117b9565b6001600160a01b031663128acb088b856111cc8f6117f7565b6001600160a01b038e16156111e1578d61121a565b8761120a57611205600173fffd8963efd1fc6a506488495d951d5263988d2661262c565b61121a565b61121a6401000276a36001612654565b8d60405160200161122b919061267f565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161125a9594939291906126bc565b60408051808303816000875af1158015611278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129c9190612702565b91509150826112ab57816112ad565b805b6112b690612726565b9b9a5050505050505050505050565b60006112d360036014612742565b60146112e0600382612742565b6112ea9190612742565b6112f49190612742565b825110159050919050565b606061132560006014611313600382612742565b61131d9190612742565b84919061180d565b92915050565b606061132561133c60036014612742565b61134860036014612742565b845161131d9190612451565b60006001600160a01b038416611368573093505b600080600061137a85600001516115de565b919450925090506001600160a01b038084169083161060008061139e8587866117b9565b6001600160a01b031663128acb088b856113b78f6117f7565b6113c090612726565b6001600160a01b038e16156113d5578d61140e565b876113fe576113f9600173fffd8963efd1fc6a506488495d951d5263988d2661262c565b61140e565b61140e6401000276a36001612654565b8d60405160200161141f919061267f565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161144e9594939291906126bc565b60408051808303816000875af115801561146c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114909190612702565b915091506000836114aa57816114a584612726565b6114b4565b826114b483612726565b90985090506001600160a01b038a166000036114d6578b81146114d657600080fd5b50505050505050949350505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916115419190612610565b6000604051808303816000865af19150503d806000811461157e576040519150601f19603f3d011682016040523d82523d6000602084013e611583565b606091505b50915091508180156115ad5750805115806115ad5750808060200190518101906115ad919061275a565b6107fe5760405162461bcd60e51b815260206004820152600260248201526114d560f21b6044820152606401610167565b600080806115ec848261191a565b92506115f984601461197f565b905061161161160a60036014612742565b859061191a565b91509193909250565b60006116308561162b868686611a2a565b611a95565b95945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b031614801561167a5750804710155b1561178d577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156116da57600080fd5b505af11580156116ee573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015611763573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611787919061275a565b50610d52565b306001600160a01b038416036117ad576117a88483836114e5565b610d52565b610d5284848484611ab8565b60006117ef7f00000000000000000000000000000000000000000000000000000000000000006117ea868686611a2a565b611bba565b949350505050565b6000600160ff1b821061180957600080fd5b5090565b60608161181b81601f612742565b101561185a5760405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606401610167565b6118648284612742565b845110156118a85760405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606401610167565b6060821580156118c75760405191506000825260208201604052611911565b6040519150601f8416801560200281840101858101878315602002848b0101015b818310156119005780518352602092830192016118e8565b5050858452601f01601f1916604052505b50949350505050565b6000611927826014612742565b8351101561196f5760405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606401610167565b500160200151600160601b900490565b60008161198d816003612742565b10156119cf5760405162461bcd60e51b8152602060048201526011602482015270746f55696e7432345f6f766572666c6f7760781b6044820152606401610167565b6119da826003612742565b83511015611a215760405162461bcd60e51b8152602060048201526014602482015273746f55696e7432345f6f75744f66426f756e647360601b6044820152606401610167565b50016003015190565b6040805160608101825260008082526020820181905291810191909152826001600160a01b0316846001600160a01b03161115611a65579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b6000611aa18383611bba565b9050336001600160a01b0382161461132557600080fd5b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611b1c9190612610565b6000604051808303816000865af19150503d8060008114611b59576040519150601f19603f3d011682016040523d82523d6000602084013e611b5e565b606091505b5091509150818015611b88575080511580611b88575080806020019051810190611b88919061275a565b6107fc5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610167565b600081602001516001600160a01b031682600001516001600160a01b031610611be257600080fd5b611c17604051806040016040528060148152602001733332b296103a37b5b2b71816103a37b5b2b7189d60611b815250611d02565b611c29826040015162ffffff16611d48565b8151611c3490611d8d565b611c418260200151611d8d565b815160208084015160408086015181516001600160a01b0395861681860152949092168482015262ffffff90911660608085019190915281518085038201815260808501909252815191909201206001600160f81b031960a08401529085901b6bffffffffffffffffffffffff191660a183015260b58201527fa598dd2fba360510c5a8f02f44423a4468e902df5857dbce3ca162a43a3a31ff60d582015260f50160408051601f1981840301815291905280516020909101209392505050565b611d4581604051602401611d16919061254a565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611dd1565b50565b611d4581604051602401611d5e91815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b179052611dd1565b6040516001600160a01b0382166024820152611d459060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000610100828403121561045457600080fd5b60006101008284031215611e1857600080fd5b611e228383611df2565b9392505050565b6001600160a01b0381168114611d4557600080fd5b60008060008060008060c08789031215611e5757600080fd5b8635611e6281611e29565b95506020870135945060408701359350606087013560ff81168114611e8657600080fd5b9598949750929560808101359460a0909101359350915050565b60008060408385031215611eb357600080fd5b823591506020830135611ec581611e29565b809150509250929050565b60008060008060808587031215611ee657600080fd5b843593506020850135611ef881611e29565b9250604085013591506060850135611f0f81611e29565b939692955090935050565b60008060208385031215611f2d57600080fd5b823567ffffffffffffffff80821115611f4557600080fd5b818501915085601f830112611f5957600080fd5b813581811115611f6857600080fd5b8660208260051b8501011115611f7d57600080fd5b60209290920196919550909350505050565b60005b83811015611faa578181015183820152602001611f92565b83811115610d525750506000910152565b60008151808452611fd3816020860160208601611f8f565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561203c57603f1988860301845261202a858351611fbb565b9450928501929085019060010161200e565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561208257612082612049565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156120b1576120b1612049565b604052919050565b600067ffffffffffffffff8211156120d3576120d3612049565b50601f01601f191660200190565b600082601f8301126120f257600080fd5b8135612105612100826120b9565b612088565b81815284602083860101111561211a57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561214957600080fd5b813567ffffffffffffffff8082111561216157600080fd5b9083019060a0828603121561217557600080fd5b61217d61205f565b82358281111561218c57600080fd5b612198878286016120e1565b825250602083013591506121ab82611e29565b81602082015260408301356040820152606083013560608201526080830135608082015280935050505092915050565b6000806000606084860312156121f057600080fd5b83356121fb81611e29565b925060208401359150604084013561221281611e29565b809150509250925092565b600080600080600060a0868803121561223557600080fd5b853561224081611e29565b945060208601359350604086013561225781611e29565b925060608601359150608086013561226e81611e29565b809150509295509295909350565b60006020828403121561228e57600080fd5b813567ffffffffffffffff8111156122a557600080fd5b820160a08185031215611e2257600080fd5b600080600080606085870312156122cd57600080fd5b8435935060208501359250604085013567ffffffffffffffff808211156122f357600080fd5b818701915087601f83011261230757600080fd5b81358181111561231657600080fd5b88602082850101111561232857600080fd5b95989497505060200194505050565b602080825260139082015272151c985b9cd858dd1a5bdb881d1bdbc81bdb19606a1b604082015260600190565b60006020828403121561237657600080fd5b8135611e2281611e29565b60006020828403121561239357600080fd5b813562ffffff81168114611e2257600080fd5b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6000602082840312156123f357600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561242a5761242a6123fa565b500290565b60008261244c57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015612463576124636123fa565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261249557600080fd5b83018035915067ffffffffffffffff8211156124b057600080fd5b6020019150368190038213156124c557600080fd5b9250929050565b8183823760009101908152919050565b6000602082840312156124ee57600080fd5b815167ffffffffffffffff81111561250557600080fd5b8201601f8101841361251657600080fd5b8051612524612100826120b9565b81815285602083850101111561253957600080fd5b611630826020830160208601611f8f565b602081526000611e226020830184611fbb565b60006001820161256f5761256f6123fa565b5060010190565b60006020828403121561258857600080fd5b813567ffffffffffffffff808211156125a057600080fd5b90830190604082860312156125b457600080fd5b6040516040810181811083821117156125cf576125cf612049565b6040528235828111156125e157600080fd5b6125ed878286016120e1565b8252506020830135925061260083611e29565b6020810192909252509392505050565b60008251612622818460208701611f8f565b9190910192915050565b60006001600160a01b038381169083168181101561264c5761264c6123fa565b039392505050565b60006001600160a01b03828116848216808303821115612676576126766123fa565b01949350505050565b60208152600082516040602084015261269b6060840182611fbb565b602094909401516001600160a01b0316604093909301929092525090919050565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906126f790830184611fbb565b979650505050505050565b6000806040838503121561271557600080fd5b505080516020909101519092909150565b6000600160ff1b820161273b5761273b6123fa565b5060000390565b60008219821115612755576127556123fa565b500190565b60006020828403121561276c57600080fd5b81518015158114611e2257600080fdfea26469706673582212204a680f411d8edc98b2fb30ba5cac64fbe1c2f0550682a718bf2eebf15ad2bc6564736f6c634300080f0033",
    "sourceMap": "829:9002:34:-:0;;;-1:-1:-1;;1392:57:34;;1456:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;523:18:16;;;;;551:14;;;829:9002:34;;14:177:35;93:13;;-1:-1:-1;;;;;135:31:35;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;829:9002:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "829:9002:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:10:17;-1:-1:-1;;;;;453:5:17;439:19;;431:41;;;;-1:-1:-1;;;431:41:17;;216:2:35;431:41:17;;;198:21:35;255:1;235:18;;;228:29;-1:-1:-1;;;273:18:35;;;266:39;322:18;;431:41:17;;;;;;;;;829:9002:34;;;;;1406:160:17;;;:::i;4550:685:34:-;;;;;;:::i;:::-;;:::i;:::-;;;948:25:35;;;936:2;921:18;4550:685:34;;;;;;;;1347:289:20;;;;;;:::i;:::-;;:::i;524:397:17:-;;;;;;:::i;:::-;;:::i;421:39:16:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2296:32:35;;;2278:51;;2266:2;2251:18;421:39:16;2132:203:35;448:697:18;;;;;;:::i;:::-;;:::i;1674:348:20:-;;;;;;:::i;:::-;;:::i;309:653:15:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5273:1289:34:-;;;;;;:::i;:::-;;:::i;995:314:20:-;;;;;;:::i;:::-;;:::i;329:41:16:-;;;;;;;;;;;;;;;8151:870:34;;;;;;:::i;:::-;;:::i;966:395:17:-;;;;;;:::i;:::-;;:::i;1197:677:18:-;;;;;;:::i;:::-;;:::i;9059:770:34:-;;;;;;:::i;:::-;;:::i;684:273:20:-;;;;;;:::i;:::-;;:::i;2156:1300:34:-;;;;;;;;;;-1:-1:-1;2156:1300:34;;;;;:::i;:::-;;:::i;1406:160:17:-;1467:21;:25;1463:96;;1494:65;1525:10;1537:21;1494:30;:65::i;:::-;1406:160::o;4550:685:34:-;4736:17;4702:15;;;;;404::14;224:29:19;;216:61;;;;-1:-1:-1;;;216:61:19;;;;;;;:::i;:::-;4781:369:34::1;4813:15;::::0;::::1;;4842:16;::::0;;;::::1;::::0;::::1;;:::i;:::-;4872:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;4910:230;::::0;;;;::::1;::::0;;;;4989:14:::1;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;5025:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;5057:15;::::0;;;::::1;::::0;::::1;;:::i;:::-;4951:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4910:230;;;;5115:10;-1:-1:-1::0;;;;;4910:230:34::1;;;::::0;4781:18:::1;:369::i;:::-;4769:381;;5181:6;:23;;;5168:9;:36;;5160:68;;;::::0;-1:-1:-1;;;5160:68:34;;11400:2:35;5160:68:34::1;::::0;::::1;11382:21:35::0;11439:2;11419:18;;;11412:30;-1:-1:-1;;;11458:18:35;;;11451:49;11517:18;;5160:68:34::1;11198:343:35::0;5160:68:34::1;4550:685:::0;;;;:::o;1347:289:20:-;1539:90;;-1:-1:-1;;;1539:90:20;;1573:10;1539:90;;;11917:34:35;1593:4:20;11967:18:35;;;11960:43;12019:18;;;12012:34;;;12062:18;;;12055:34;;;1615:4:20;12105:19:35;;;12098:51;12198:4;12186:17;;12165:19;;;12158:46;12220:19;;;12213:35;;;12264:19;;;12257:35;;;-1:-1:-1;;;;;1539:33:20;;;;;11851:19:35;;1539:90:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:289;;;;;;:::o;524:397:17:-;644:38;;-1:-1:-1;;;644:38:17;;676:4;644:38;;;2278:51:35;621:20:17;;651:5;-1:-1:-1;;;;;644:23:17;;;;2251:18:35;;644:38:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;621:61;;716:13;700:12;:29;;692:60;;;;-1:-1:-1;;;692:60:17;;12694:2:35;692:60:17;;;12676:21:35;12733:2;12713:18;;;12706:30;-1:-1:-1;;;12752:18:35;;;12745:48;12810:18;;692:60:17;12492:342:35;692:60:17;767:16;;763:152;;799:36;;-1:-1:-1;;;799:36:17;;;;;948:25:35;;;806:5:17;-1:-1:-1;;;;;799:22:17;;;;921:18:35;;799:36:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;849:55;880:9;891:12;849:30;:55::i;:::-;611:310;524:397;;:::o;448:697:18:-;647:1;637:7;:11;:29;;;;;663:3;652:7;:14;;637:29;629:38;;;;;;701;;-1:-1:-1;;;701:38:18;;733:4;701:38;;;2278:51:35;678:20:18;;708:5;-1:-1:-1;;;;;701:23:18;;;;2251:18:35;;701:38:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;678:61;;773:13;757:12;:29;;749:60;;;;-1:-1:-1;;;749:60:18;;12694:2:35;749:60:18;;;12676:21:35;12733:2;12713:18;;;12706:30;-1:-1:-1;;;12752:18:35;;;12745:48;12810:18;;749:60:18;12492:342:35;749:60:18;824:16;;820:319;;856:36;;-1:-1:-1;;;856:36:18;;;;;948:25:35;;;863:5:18;-1:-1:-1;;;;;856:22:18;;;;921:18:35;;856:36:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;906:17;953:6;942:7;927:12;:22;;;;:::i;:::-;926:33;;;;:::i;:::-;906:53;-1:-1:-1;977:13:18;;973:74;;992:55;1023:12;1037:9;992:30;:55::i;:::-;1061:67;1092:9;1103:24;1118:9;1103:12;:24;:::i;:::-;1061:30;:67::i;:::-;842:297;820:319;619:526;448:697;;;;:::o;1674:348:20:-;1883:50;;-1:-1:-1;;;1883:50:20;;1907:10;1883:50;;;13708:34:35;1927:4:20;13758:18:35;;;13751:43;-1:-1:-1;;1936:17:20;-1:-1:-1;;;;;1883:23:20;;;;;13643:18:35;;1883:50:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;1879:136;;;1967:48;1985:5;1992;1999:6;2007:1;2010;2013;1967:17;:48::i;309:653:15:-;384:22;440:4;428:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:34;;467:9;462:494;482:15;;;462:494;;;519:12;;564:4;583;;588:1;583:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;556:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;518:73;;;;611:7;606:306;;738:2;722:6;:13;:18;718:32;;;742:8;;;718:32;821:4;813:6;809:17;799:27;;879:6;868:28;;;;;;;;;;;;:::i;:::-;861:36;;-1:-1:-1;;;861:36:15;;;;;;;;:::i;606:306::-;939:6;926:7;934:1;926:10;;;;;;;;:::i;:::-;;;;;;:19;;;;504:452;;499:3;;;;;:::i;:::-;;;;462:494;;;;309:653;;;;:::o;5273:1289:34:-;5445:17;5411:6;:15;;;245:8:19;224:17;404:15:14;;320:106;224:17:19;:29;;216:61;;;;-1:-1:-1;;;216:61:19;;;;;;;:::i;:::-;5494:10:34::1;5552:925;5579:21;5603:30;:6;:11;;;:28;:30::i;:::-;5579:54;;5745:394;5781:6;:15;;;5814:16;:51;;5849:6;:16;;;5814:51;;;5841:4;5814:51;5934:1;5953:172;;;;;;;;5998:26;:6;:11;;;:24;:26::i;:::-;5953:172;;;;6101:5;-1:-1:-1::0;;;;;5953:172:34::1;;;::::0;5745:18:::1;:394::i;:::-;5727:15;::::0;::::1;:412:::0;6209:258;::::1;;;6340:11:::0;;6265:4:::1;::::0;-1:-1:-1;6340:23:34::1;::::0;:21:::1;:23::i;:::-;6326:37:::0;;6209:258:::1;;;6414:6;:15;;;6402:27;;6447:5;;;6209:258;5565:912;5552:925;;;6508:6;:23;;;6495:9;:36;;6487:68;;;::::0;-1:-1:-1;;;6487:68:34;;11400:2:35;6487:68:34::1;::::0;::::1;11382:21:35::0;11439:2;11419:18;;;11412:30;-1:-1:-1;;;11458:18:35;;;11451:49;11517:18;;6487:68:34::1;11198:343:35::0;6487:68:34::1;5468:1094;5273:1289:::0;;;;:::o;995:314:20:-;1199:50;;-1:-1:-1;;;1199:50:20;;1223:10;1199:50;;;13708:34:35;1243:4:20;13758:18:35;;;13751:43;1252:5:20;;-1:-1:-1;;;;;1199:23:20;;;;;13643:18:35;;1199:50:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;1195:107;;;1259:43;1270:5;1277;1284:8;1294:1;1297;1300;1259:10;:43::i;8151:870:34:-;8339:16;8305:15;;;;;404::14;224:29:19;;216:61;;;;-1:-1:-1;;;216:61:19;;;;;;;:::i;:::-;8438:371:34::1;8471:16;::::0;::::1;;8501;::::0;;;::::1;::::0;::::1;;:::i;:::-;8531:24;::::0;;;::::1;::::0;::::1;;:::i;:::-;8569:230;;;;;;;;8648:6;:15;;;;;;;;;;:::i;:::-;8685:10;::::0;;;::::1;::::0;::::1;;:::i;:::-;8717:14;;::::0;::::1;:6:::0;:14:::1;:::i;:::-;8610:139;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8569:230;;;;8774:10;-1:-1:-1::0;;;;;8569:230:34::1;;;::::0;8438:19:::1;:371::i;:::-;8427:382;;8840:6;:22;;;8828:8;:34;;8820:65;;;::::0;-1:-1:-1;;;8820:65:34;;15945:2:35;8820:65:34::1;::::0;::::1;15927:21:35::0;15984:2;15964:18;;;15957:30;-1:-1:-1;;;16003:18:35;;;15996:48;16061:18;;8820:65:34::1;15743:342:35::0;8820:65:34::1;-1:-1:-1::0;;;8973:14:34::1;:41:::0;8151:870;;-1:-1:-1;8151:870:34:o;966:395:17:-;1130:38;;-1:-1:-1;;;1130:38:17;;1162:4;1130:38;;;2278:51:35;1107:20:17;;-1:-1:-1;;;;;1130:23:17;;;;;2251:18:35;;1130:38:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1107:61;;1202:13;1186:12;:29;;1178:60;;;;-1:-1:-1;;;1178:60:17;;16292:2:35;1178:60:17;;;16274:21:35;16331:2;16311:18;;;16304:30;-1:-1:-1;;;16350:18:35;;;16343:48;16408:18;;1178:60:17;16090:342:35;1178:60:17;1253:16;;1249:106;;1285:59;1313:5;1320:9;1331:12;1285:27;:59::i;:::-;1097:264;966:395;;;:::o;1197:677:18:-;1418:1;1408:7;:11;:29;;;;;1434:3;1423:7;:14;;1408:29;1400:38;;;;;;1472;;-1:-1:-1;;;1472:38:18;;1504:4;1472:38;;;2278:51:35;1449:20:18;;-1:-1:-1;;;;;1472:23:18;;;;;2251:18:35;;1472:38:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1449:61;;1544:13;1528:12;:29;;1520:60;;;;-1:-1:-1;;;1520:60:18;;16292:2:35;1520:60:18;;;16274:21:35;16331:2;16311:18;;;16304:30;-1:-1:-1;;;16350:18:35;;;16343:48;16408:18;;1520:60:18;16090:342:35;1520:60:18;1595:16;;1591:277;;1627:17;1674:6;1648:22;1663:7;1648:12;:22;:::i;:::-;1647:33;;;;:::i;:::-;1627:53;-1:-1:-1;1698:13:18;;1694:78;;1713:59;1741:5;1748:12;1762:9;1713:27;:59::i;:::-;1786:71;1814:5;1821:9;1832:24;1847:9;1832:12;:24;:::i;:::-;1786:27;:71::i;:::-;1613:255;1390:484;1197:677;;;;;:::o;9059:770:34:-;9235:16;9201:15;;;;;404::14;224:29:19;;216:61;;;;-1:-1:-1;;;216:61:19;;;;;;;:::i;:::-;9486:174:34::1;9519:16;::::0;::::1;;9549;::::0;;;::::1;::::0;::::1;;:::i;:::-;9594:56;::::0;;;;::::1;::::0;;;9579:1:::1;::::0;9594:56;9618:11:::1;:6:::0;;:11:::1;:::i;:::-;9594:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;9594:56:34;;;-1:-1:-1;9638:10:34::1;9594:56;::::0;;::::1;::::0;9486:19:::1;:174::i;:::-;;9682:14;;9671:25;;9726:6;:22;;;9714:8;:34;;9706:65;;;::::0;-1:-1:-1;;;9706:65:34;;15945:2:35;9706:65:34::1;::::0;::::1;15927:21:35::0;15984:2;15964:18;;;15957:30;-1:-1:-1;;;16003:18:35;;;15996:48;16061:18;;9706:65:34::1;15743:342:35::0;684:273:20;871:79;;-1:-1:-1;;;871:79:20;;898:10;871:79;;;16786:34:35;918:4:20;16836:18:35;;;16829:43;16888:18;;;16881:34;;;16931:18;;;16924:34;;;17007:4;16995:17;;16974:19;;;16967:46;17029:19;;;17022:35;;;17073:19;;;17066:35;;;-1:-1:-1;;;;;871:26:20;;;;;16720:19:35;;871:79:20;16437:670:35;2156:1300:34;2332:1;2317:12;:16;:36;;;;2352:1;2337:12;:16;2317:36;2309:45;;;;;;2427:28;2458:37;;;;2469:5;2458:37;:::i;:::-;2427:68;;2506:15;2523:16;2541:10;2555:53;:4;:22;;;:51;:53::i;:::-;2505:103;;;;;;2618:66;2652:7;2661;2670:8;2680:3;2618:33;:66::i;:::-;;2696:17;2715:19;2753:1;2738:12;:16;:132;;2839:7;-1:-1:-1;;;;;2828:18:34;:8;-1:-1:-1;;;;;2828:18:34;;2856:12;2738:132;;;2780:8;-1:-1:-1;;;;;2770:18:34;:7;-1:-1:-1;;;;;2770:18:34;;2798:12;2738:132;2695:175;;;;2884:12;2880:570;;;2912:49;2916:7;2925:4;:10;;;2937;2949:11;2912:3;:49::i;:::-;2880:570;;;3048:9;;:28;;:26;:28::i;:::-;3044:396;;;3108:9;;:21;;:19;:21::i;:::-;3096:33;;3147:53;3167:11;3180:10;3096:9;:4;3147:19;:53::i;:::-;;3044:396;;;3256:11;3239:14;:28;;;;3295:8;3285:18;;3376:49;3380:7;3389:4;:10;;;3401;3413:11;3376:3;:49::i;2380:165:33:-;2492:12;;;2452;2492;;;;;;;;;-1:-1:-1;;;;;2470:7:33;;;2485:5;;2470:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2451:54;;;2523:7;2515:23;;;;-1:-1:-1;;;2515:23:33;;18492:2:35;2515:23:33;;;18474:21:35;18531:1;18511:18;;;18504:29;-1:-1:-1;;;18549:18:35;;;18542:33;18592:18;;2515:23:33;18290:326:35;3510:1002:34;3687:17;-1:-1:-1;;;;;3783:23:34;;3779:54;;3828:4;3808:25;;3779:54;3845:15;3862:16;3880:10;3894:53;:4;:22;;;:51;:53::i;:::-;3844:103;;-1:-1:-1;3844:103:34;-1:-1:-1;3844:103:34;-1:-1:-1;;;;;;3976:18:34;;;;;;;3958:15;;4040:31;3844:103;;;4040:7;:31::i;:::-;-1:-1:-1;;;;;4040:36:34;;4090:9;4113:10;4137:19;:8;:17;:19::i;:::-;-1:-1:-1;;;;;4170:22:34;;;:235;;4388:17;4170:235;;;4233:10;:118;;4324:27;4350:1;1027:49:13;4324:27:34;:::i;:::-;4233:118;;;4270:27;847:10:13;4296:1:34;4270:27;:::i;:::-;4430:4;4419:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;4040:405;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4005:440;;;;4473:10;:30;;4496:7;4473:30;;;4486:7;4473:30;4471:33;;;:::i;:::-;4456:49;3510:1002;-1:-1:-1;;;;;;;;;;;3510:1002:34:o;992:138:31:-;1060:4;507:20;397:1;304:2;507:20;:::i;:::-;304:2;507:20;397:1;304:2;507:20;:::i;:::-;618:23;;;;:::i;:::-;777:24;;;;:::i;:::-;1083:4;:11;:40;;1076:47;;992:138;;;:::o;2319:127::-;2383:12;2414:25;2425:1;304:2;507:20;397:1;304:2;507:20;:::i;:::-;618:23;;;;:::i;:::-;2414:4;;:25;:10;:25::i;:::-;2407:32;2319:127;-1:-1:-1;;2319:127:31:o;2635:149::-;2696:12;2727:50;507:20;397:1;304:2;507:20;:::i;:::-;;397:1;304:2;507:20;:::i;:::-;2751:4;:11;:25;;;;:::i;6617:1496:34:-;6796:16;-1:-1:-1;;;;;6891:23:34;;6887:54;;6936:4;6916:25;;6887:54;6953:16;6971:15;6988:10;7002:53;:4;:22;;;:51;:53::i;:::-;6952:103;;-1:-1:-1;6952:103:34;-1:-1:-1;6952:103:34;-1:-1:-1;;;;;;7084:18:34;;;;;;;7066:15;;7158:77;6952:103;;;7158:7;:77::i;:::-;-1:-1:-1;;;;;7158:82:34;;7258:9;7285:10;7314:20;:9;:18;:20::i;:::-;7313:21;;;:::i;:::-;-1:-1:-1;;;;;7352:22:34;;;:259;;7594:17;7352:259;;;7423:10;:126;;7522:27;7548:1;1027:49:13;7522:27:34;:::i;:::-;7423:126;;;7464:27;847:10:13;7490:1:34;7464:27;:::i;:::-;7640:4;7629:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;7158:501;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7113:546;;;;7670:25;7737:10;:134;;7833:12;7856:13;7857:12;7856:13;:::i;:::-;7737:134;;;7771:12;7794:13;7795:12;7794:13;:::i;:::-;7705:166;;-1:-1:-1;7705:166:34;-1:-1:-1;;;;;;8043:22:34;;8064:1;8043:22;8039:67;;8096:9;8075:17;:30;8067:39;;;;;;6814:1299;;;;;;;6617:1496;;;;;;:::o;1221:309:33:-;1381:59;;;-1:-1:-1;;;;;20866:32:35;;;1381:59:33;;;20848:51:35;20915:18;;;;20908:34;;;1381:59:33;;;;;;;;;;20821:18:35;;;;1381:59:33;;;;;;;-1:-1:-1;;;;;1381:59:33;-1:-1:-1;;;1381:59:33;;;1370:71;;-1:-1:-1;;;;1370:10:33;;;;:71;;1381:59;1370:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:107;;;;1459:7;:57;;;;-1:-1:-1;1471:11:33;;:16;;:44;;;1502:4;1491:24;;;;;;;;;;;;:::i;:::-;1451:72;;;;-1:-1:-1;;;1451:72:33;;21437:2:35;1451:72:33;;;21419:21:35;21476:1;21456:18;;;21449:29;-1:-1:-1;;;21494:18:35;;;21487:32;21536:18;;1451:72:33;21235:325:35;1779:314:31;1883:14;;;1983:17;:4;1883:14;1983;:17::i;:::-;1974:26;-1:-1:-1;2016:24:31;:4;304:2;2016:13;:24::i;:::-;2010:30;-1:-1:-1;2059:27:31;507:20;397:1;304:2;507:20;:::i;:::-;2059:4;;:14;:27::i;:::-;2050:36;;1779:314;;;;;:::o;683:259:30:-;829:19;867:68;882:7;891:43;914:6;922;930:3;891:22;:43::i;:::-;867:14;:68::i;:::-;860:75;683:259;-1:-1:-1;;;;;683:259:30:o;1757:699:17:-;1904:5;-1:-1:-1;;;;;1895:14:17;:5;-1:-1:-1;;;;;1895:14:17;;:48;;;;;1938:5;1913:21;:30;;1895:48;1891:559;;;1996:5;-1:-1:-1;;;;;1989:21:17;;2018:5;1989:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2075:40:17;;-1:-1:-1;;;2075:40:17;;-1:-1:-1;;;;;20866:32:35;;;2075:40:17;;;20848:51:35;20915:18;;;20908:34;;;2082:5:17;2075:22;;-1:-1:-1;2075:22:17;;-1:-1:-1;20821:18:35;;;-1:-1:-1;2075:40:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1891:559;;;2153:4;-1:-1:-1;;;;;2136:22:17;;;2132:318;;2265:52;2293:5;2300:9;2311:5;2265:27;:52::i;:::-;2132:318;;;2376:63;2408:5;2415;2422:9;2433:5;2376:31;:63::i;1678:349:34:-;1791:14;1868:138;1916:7;1945:43;1968:6;1976;1984:3;1945:22;:43::i;:::-;1868:26;:138::i;:::-;1817:203;1678:349;-1:-1:-1;;;;1678:349:34:o;924:121:12:-;976:8;-1:-1:-1;;;1004:1:12;:10;996:19;;;;;;-1:-1:-1;1036:1:12;924:121::o;399:2776:29:-;521:12;569:7;553:12;569:7;563:2;553:12;:::i;:::-;:23;;545:50;;;;-1:-1:-1;;;545:50:29;;21767:2:35;545:50:29;;;21749:21:35;21806:2;21786:18;;;21779:30;-1:-1:-1;;;21825:18:35;;;21818:44;21879:18;;545:50:29;21565:338:35;545:50:29;630:16;639:7;630:6;:16;:::i;:::-;613:6;:13;:33;;605:63;;;;-1:-1:-1;;;605:63:29;;22110:2:35;605:63:29;;;22092:21:35;22149:2;22129:18;;;22122:30;-1:-1:-1;;;22168:18:35;;;22161:47;22225:18;;605:63:29;21908:341:35;605:63:29;679:22;742:15;;770:1967;;;;2878:4;2872:11;2859:24;;3064:1;3053:9;3046:20;3112:4;3101:9;3097:20;3091:4;3084:34;735:2397;;770:1967;952:4;946:11;933:24;;1611:2;1602:7;1598:16;1993:9;1986:17;1980:4;1976:28;1964:9;1953;1949:25;1945:60;2041:7;2037:2;2033:16;2293:6;2279:9;2272:17;2266:4;2262:28;2250:9;2242:6;2238:22;2234:57;2230:70;2067:425;2326:3;2322:2;2319:11;2067:425;;;2464:9;;2453:21;;2367:4;2359:13;;;;2399;2067:425;;;-1:-1:-1;;2510:26:29;;;2718:2;2701:11;-1:-1:-1;;2697:25:29;2691:4;2684:39;-1:-1:-1;735:2397:29;-1:-1:-1;3159:9:29;399:2776;-1:-1:-1;;;;399:2776:29:o;3181:354::-;3260:7;3304:11;:6;3313:2;3304:11;:::i;:::-;3287:6;:13;:28;;3279:62;;;;-1:-1:-1;;;3279:62:29;;22456:2:35;3279:62:29;;;22438:21:35;22495:2;22475:18;;;22468:30;-1:-1:-1;;;22514:18:35;;;22507:51;22575:18;;3279:62:29;22254:345:35;3279:62:29;-1:-1:-1;3429:30:29;3445:4;3429:30;3423:37;-1:-1:-1;;;3419:71:29;;;3181:354::o;3541:365::-;3619:6;3659;3645:10;3659:6;3654:1;3645:10;:::i;:::-;:20;;3637:50;;;;-1:-1:-1;;;3637:50:29;;22806:2:35;3637:50:29;;;22788:21:35;22845:2;22825:18;;;22818:30;-1:-1:-1;;;22864:18:35;;;22857:47;22921:18;;3637:50:29;22604:341:35;3637:50:29;3722:10;:6;3731:1;3722:10;:::i;:::-;3705:6;:13;:27;;3697:60;;;;-1:-1:-1;;;3697:60:29;;23152:2:35;3697:60:29;;;23134:21:35;23191:2;23171:18;;;23164:30;-1:-1:-1;;;23210:18:35;;;23203:50;23270:18;;3697:60:29;22950:344:35;3697:60:29;-1:-1:-1;3834:29:29;3850:3;3834:29;3828:36;;3541:365::o;816:244:32:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;942:6:32;-1:-1:-1;;;;;933:15:32;:6;-1:-1:-1;;;;;933:15:32;;929:56;;;970:6;;978;929:56;-1:-1:-1;1002:51:32;;;;;;;;-1:-1:-1;;;;;1002:51:32;;;;;;;;;;;;;;;;;;;;;;;816:244::o;1189:273:30:-;1311:19;1364:44;1391:7;1400;1364:26;:44::i;:::-;1342:67;-1:-1:-1;1427:10:30;-1:-1:-1;;;;;1427:27:30;;;1419:36;;;;;561:368:33;760:69;;;-1:-1:-1;;;;;23557:15:35;;;760:69:33;;;23539:34:35;23609:15;;;23589:18;;;23582:43;23641:18;;;;23634:34;;;760:69:33;;;;;;;;;;23474:18:35;;;;760:69:33;;;;;;;-1:-1:-1;;;;;760:69:33;-1:-1:-1;;;760:69:33;;;736:103;;-1:-1:-1;;;;736:10:33;;;;:103;;760:69;736:103;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:139;;;;857:7;:57;;;;-1:-1:-1;869:11:33;;:16;;:44;;;900:4;889:24;;;;;;;;;;;;:::i;:::-;849:73;;;;-1:-1:-1;;;849:73:33;;23881:2:35;849:73:33;;;23863:21:35;23920:1;23900:18;;;23893:29;-1:-1:-1;;;23938:18:35;;;23931:33;23981:18;;849:73:33;23679:326:35;1307:728:32;1391:12;1436:3;:10;;;-1:-1:-1;;;;;1423:23:32;:3;:10;;;-1:-1:-1;;;;;1423:23:32;;1415:32;;;;;;1457:35;;;;;;;;;;;;;;-1:-1:-1;;;1457:35:32;;;:11;:35::i;:::-;1502:20;1514:3;:7;;;1502:20;;:11;:20::i;:::-;1544:10;;1532:23;;:11;:23::i;:::-;1565;1577:3;:10;;;1565:11;:23::i;:::-;1856:10;;1868;;;;;1880:7;;;;;1845:43;;-1:-1:-1;;;;;24266:15:35;;;1845:43:32;;;24248:34:35;24318:15;;;;24298:18;;;24291:43;24382:8;24370:21;;;24350:18;;;;24343:49;;;;1845:43:32;;;;;;;;;24183:18:35;;;1845:43:32;;;1835:54;;;;;;;-1:-1:-1;;;;;;1715:249:32;;;24689:26:35;24748:15;;;;-1:-1:-1;;24744:53:35;24731:11;;;24724:74;24814:12;;;24807:28;273:66:32;24851:12:35;;;24844:28;24888:12;;1715:249:32;;;-1:-1:-1;;1715:249:32;;;;;;;;;1680:306;;1715:249;1680:306;;;;;1307:728;-1:-1:-1;;;1307:728:32:o;5630:121:0:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:0;-1:-1:-1;;;5701:42:0;;;5685:15;:59::i;:::-;5630:121;:::o;5514:110::-;5560:57;5613:2;5576:40;;;;;;948:25:35;;936:2;921:18;;802:177;5576:40:0;;;;-1:-1:-1;;5576:40:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5576:40:0;-1:-1:-1;;;5576:40:0;;;5560:15;:57::i;5873:116::-;5938:43;;-1:-1:-1;;;;;2296:32:35;;5938:43:0;;;2278:51:35;5922:60:0;;2251:18:35;;5938:43:0;;;-1:-1:-1;;5938:43:0;;;;;;;;;;;;;;-1:-1:-1;;;;;5938:43:0;-1:-1:-1;;;5938:43:0;;;181:376;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;351:171:35:-;426:5;471:3;462:6;457:3;453:16;449:26;446:46;;;488:1;485;478:12;527:270;629:6;682:3;670:9;661:7;657:23;653:33;650:53;;;699:1;696;689:12;650:53;722:69;783:7;772:9;722:69;:::i;:::-;712:79;527:270;-1:-1:-1;;;527:270:35:o;984:131::-;-1:-1:-1;;;;;1059:31:35;;1049:42;;1039:70;;1105:1;1102;1095:12;1120:687;1222:6;1230;1238;1246;1254;1262;1315:3;1303:9;1294:7;1290:23;1286:33;1283:53;;;1332:1;1329;1322:12;1283:53;1371:9;1358:23;1390:31;1415:5;1390:31;:::i;:::-;1440:5;-1:-1:-1;1492:2:35;1477:18;;1464:32;;-1:-1:-1;1543:2:35;1528:18;;1515:32;;-1:-1:-1;1599:2:35;1584:18;;1571:32;1647:4;1634:18;;1622:31;;1612:59;;1667:1;1664;1657:12;1612:59;1120:687;;;;-1:-1:-1;1120:687:35;;1744:3;1729:19;;1716:33;;1796:3;1781:19;;;1768:33;;-1:-1:-1;1120:687:35;-1:-1:-1;;1120:687:35:o;1812:315::-;1880:6;1888;1941:2;1929:9;1920:7;1916:23;1912:32;1909:52;;;1957:1;1954;1947:12;1909:52;1993:9;1980:23;1970:33;;2053:2;2042:9;2038:18;2025:32;2066:31;2091:5;2066:31;:::i;:::-;2116:5;2106:15;;;1812:315;;;;;:::o;2340:525::-;2426:6;2434;2442;2450;2503:3;2491:9;2482:7;2478:23;2474:33;2471:53;;;2520:1;2517;2510:12;2471:53;2556:9;2543:23;2533:33;;2616:2;2605:9;2601:18;2588:32;2629:31;2654:5;2629:31;:::i;:::-;2679:5;-1:-1:-1;2731:2:35;2716:18;;2703:32;;-1:-1:-1;2787:2:35;2772:18;;2759:32;2800:33;2759:32;2800:33;:::i;:::-;2340:525;;;;-1:-1:-1;2340:525:35;;-1:-1:-1;;2340:525:35:o;2870:626::-;2967:6;2975;3028:2;3016:9;3007:7;3003:23;2999:32;2996:52;;;3044:1;3041;3034:12;2996:52;3084:9;3071:23;3113:18;3154:2;3146:6;3143:14;3140:34;;;3170:1;3167;3160:12;3140:34;3208:6;3197:9;3193:22;3183:32;;3253:7;3246:4;3242:2;3238:13;3234:27;3224:55;;3275:1;3272;3265:12;3224:55;3315:2;3302:16;3341:2;3333:6;3330:14;3327:34;;;3357:1;3354;3347:12;3327:34;3410:7;3405:2;3395:6;3392:1;3388:14;3384:2;3380:23;3376:32;3373:45;3370:65;;;3431:1;3428;3421:12;3370:65;3462:2;3454:11;;;;;3484:6;;-1:-1:-1;2870:626:35;;-1:-1:-1;;;;2870:626:35:o;3501:258::-;3573:1;3583:113;3597:6;3594:1;3591:13;3583:113;;;3673:11;;;3667:18;3654:11;;;3647:39;3619:2;3612:10;3583:113;;;3714:6;3711:1;3708:13;3705:48;;;-1:-1:-1;;3749:1:35;3731:16;;3724:27;3501:258::o;3764:257::-;3805:3;3843:5;3837:12;3870:6;3865:3;3858:19;3886:63;3942:6;3935:4;3930:3;3926:14;3919:4;3912:5;3908:16;3886:63;:::i;:::-;4003:2;3982:15;-1:-1:-1;;3978:29:35;3969:39;;;;4010:4;3965:50;;3764:257;-1:-1:-1;;3764:257:35:o;4026:800::-;4186:4;4215:2;4255;4244:9;4240:18;4285:2;4274:9;4267:21;4308:6;4343;4337:13;4374:6;4366;4359:22;4412:2;4401:9;4397:18;4390:25;;4474:2;4464:6;4461:1;4457:14;4446:9;4442:30;4438:39;4424:53;;4512:2;4504:6;4500:15;4533:1;4543:254;4557:6;4554:1;4551:13;4543:254;;;4650:2;4646:7;4634:9;4626:6;4622:22;4618:36;4613:3;4606:49;4678:39;4710:6;4701;4695:13;4678:39;:::i;:::-;4668:49;-1:-1:-1;4775:12:35;;;;4740:15;;;;4579:1;4572:9;4543:254;;;-1:-1:-1;4814:6:35;;4026:800;-1:-1:-1;;;;;;;4026:800:35:o;4831:127::-;4892:10;4887:3;4883:20;4880:1;4873:31;4923:4;4920:1;4913:15;4947:4;4944:1;4937:15;4963:253;5035:2;5029:9;5077:4;5065:17;;5112:18;5097:34;;5133:22;;;5094:62;5091:88;;;5159:18;;:::i;:::-;5195:2;5188:22;4963:253;:::o;5221:275::-;5292:2;5286:9;5357:2;5338:13;;-1:-1:-1;;5334:27:35;5322:40;;5392:18;5377:34;;5413:22;;;5374:62;5371:88;;;5439:18;;:::i;:::-;5475:2;5468:22;5221:275;;-1:-1:-1;5221:275:35:o;5501:186::-;5549:4;5582:18;5574:6;5571:30;5568:56;;;5604:18;;:::i;:::-;-1:-1:-1;5670:2:35;5649:15;-1:-1:-1;;5645:29:35;5676:4;5641:40;;5501:186::o;5692:462::-;5734:5;5787:3;5780:4;5772:6;5768:17;5764:27;5754:55;;5805:1;5802;5795:12;5754:55;5841:6;5828:20;5872:48;5888:31;5916:2;5888:31;:::i;:::-;5872:48;:::i;:::-;5945:2;5936:7;5929:19;5991:3;5984:4;5979:2;5971:6;5967:15;5963:26;5960:35;5957:55;;;6008:1;6005;5998:12;5957:55;6073:2;6066:4;6058:6;6054:17;6047:4;6038:7;6034:18;6021:55;6121:1;6096:16;;;6114:4;6092:27;6085:38;;;;6100:7;5692:462;-1:-1:-1;;;5692:462:35:o;6159:925::-;6253:6;6306:2;6294:9;6285:7;6281:23;6277:32;6274:52;;;6322:1;6319;6312:12;6274:52;6362:9;6349:23;6391:18;6432:2;6424:6;6421:14;6418:34;;;6448:1;6445;6438:12;6418:34;6471:22;;;;6527:4;6509:16;;;6505:27;6502:47;;;6545:1;6542;6535:12;6502:47;6571:22;;:::i;:::-;6631:2;6618:16;6659:2;6649:8;6646:16;6643:36;;;6675:1;6672;6665:12;6643:36;6702:44;6738:7;6727:8;6723:2;6719:17;6702:44;:::i;:::-;6695:5;6688:59;;6792:2;6788;6784:11;6771:25;6756:40;;6805:33;6830:7;6805:33;:::i;:::-;6870:7;6865:2;6858:5;6854:14;6847:31;6931:2;6927;6923:11;6910:25;6905:2;6898:5;6894:14;6887:49;6989:2;6985;6981:11;6968:25;6963:2;6956:5;6952:14;6945:49;7048:3;7044:2;7040:12;7027:26;7021:3;7014:5;7010:15;7003:51;7073:5;7063:15;;;;;6159:925;;;;:::o;7365:456::-;7442:6;7450;7458;7511:2;7499:9;7490:7;7486:23;7482:32;7479:52;;;7527:1;7524;7517:12;7479:52;7566:9;7553:23;7585:31;7610:5;7585:31;:::i;:::-;7635:5;-1:-1:-1;7687:2:35;7672:18;;7659:32;;-1:-1:-1;7743:2:35;7728:18;;7715:32;7756:33;7715:32;7756:33;:::i;:::-;7808:7;7798:17;;;7365:456;;;;;:::o;7826:667::-;7921:6;7929;7937;7945;7953;8006:3;7994:9;7985:7;7981:23;7977:33;7974:53;;;8023:1;8020;8013:12;7974:53;8062:9;8049:23;8081:31;8106:5;8081:31;:::i;:::-;8131:5;-1:-1:-1;8183:2:35;8168:18;;8155:32;;-1:-1:-1;8239:2:35;8224:18;;8211:32;8252:33;8211:32;8252:33;:::i;:::-;8304:7;-1:-1:-1;8358:2:35;8343:18;;8330:32;;-1:-1:-1;8414:3:35;8399:19;;8386:33;8428;8386;8428;:::i;:::-;8480:7;8470:17;;;7826:667;;;;;;;;:::o;8498:398::-;8595:6;8648:2;8636:9;8627:7;8623:23;8619:32;8616:52;;;8664:1;8661;8654:12;8616:52;8704:9;8691:23;8737:18;8729:6;8726:30;8723:50;;;8769:1;8766;8759:12;8723:50;8792:22;;8848:3;8830:16;;;8826:26;8823:46;;;8865:1;8862;8855:12;8901:725;8987:6;8995;9003;9011;9064:2;9052:9;9043:7;9039:23;9035:32;9032:52;;;9080:1;9077;9070:12;9032:52;9116:9;9103:23;9093:33;;9173:2;9162:9;9158:18;9145:32;9135:42;;9228:2;9217:9;9213:18;9200:32;9251:18;9292:2;9284:6;9281:14;9278:34;;;9308:1;9305;9298:12;9278:34;9346:6;9335:9;9331:22;9321:32;;9391:7;9384:4;9380:2;9376:13;9372:27;9362:55;;9413:1;9410;9403:12;9362:55;9453:2;9440:16;9479:2;9471:6;9468:14;9465:34;;;9495:1;9492;9485:12;9465:34;9540:7;9535:2;9526:6;9522:2;9518:15;9514:24;9511:37;9508:57;;;9561:1;9558;9551:12;9508:57;8901:725;;;;-1:-1:-1;;9592:2:35;9584:11;;-1:-1:-1;;;8901:725:35:o;9631:343::-;9833:2;9815:21;;;9872:2;9852:18;;;9845:30;-1:-1:-1;;;9906:2:35;9891:18;;9884:49;9965:2;9950:18;;9631:343::o;9979:247::-;10038:6;10091:2;10079:9;10070:7;10066:23;10062:32;10059:52;;;10107:1;10104;10097:12;10059:52;10146:9;10133:23;10165:31;10190:5;10165:31;:::i;10483:274::-;10541:6;10594:2;10582:9;10573:7;10569:23;10565:32;10562:52;;;10610:1;10607;10600:12;10562:52;10649:9;10636:23;10699:8;10692:5;10688:20;10681:5;10678:31;10668:59;;10723:1;10720;10713:12;10762:431;11015:2;11011:15;;;-1:-1:-1;;11007:24:35;;;10995:37;;11088:3;11066:16;;;;-1:-1:-1;;;;;;11062:41:35;11057:2;11048:12;;11041:63;11138:15;;11134:24;11129:2;11120:12;;11113:46;11184:2;11175:12;;10762:431::o;12303:184::-;12373:6;12426:2;12414:9;12405:7;12401:23;12397:32;12394:52;;;12442:1;12439;12432:12;12394:52;-1:-1:-1;12465:16:35;;12303:184;-1:-1:-1;12303:184:35:o;12839:127::-;12900:10;12895:3;12891:20;12888:1;12881:31;12931:4;12928:1;12921:15;12955:4;12952:1;12945:15;12971:168;13011:7;13077:1;13073;13069:6;13065:14;13062:1;13059:21;13054:1;13047:9;13040:17;13036:45;13033:71;;;13084:18;;:::i;:::-;-1:-1:-1;13124:9:35;;12971:168::o;13144:217::-;13184:1;13210;13200:132;;13254:10;13249:3;13245:20;13242:1;13235:31;13289:4;13286:1;13279:15;13317:4;13314:1;13307:15;13200:132;-1:-1:-1;13346:9:35;;13144:217::o;13366:125::-;13406:4;13434:1;13431;13428:8;13425:34;;;13439:18;;:::i;:::-;-1:-1:-1;13476:9:35;;13366:125::o;13805:127::-;13866:10;13861:3;13857:20;13854:1;13847:31;13897:4;13894:1;13887:15;13921:4;13918:1;13911:15;13937:521;14014:4;14020:6;14080:11;14067:25;14174:2;14170:7;14159:8;14143:14;14139:29;14135:43;14115:18;14111:68;14101:96;;14193:1;14190;14183:12;14101:96;14220:33;;14272:20;;;-1:-1:-1;14315:18:35;14304:30;;14301:50;;;14347:1;14344;14337:12;14301:50;14380:4;14368:17;;-1:-1:-1;14411:14:35;14407:27;;;14397:38;;14394:58;;;14448:1;14445;14438:12;14394:58;13937:521;;;;;:::o;14463:271::-;14646:6;14638;14633:3;14620:33;14602:3;14672:16;;14697:13;;;14672:16;14463:271;-1:-1:-1;14463:271:35:o;14739:635::-;14819:6;14872:2;14860:9;14851:7;14847:23;14843:32;14840:52;;;14888:1;14885;14878:12;14840:52;14921:9;14915:16;14954:18;14946:6;14943:30;14940:50;;;14986:1;14983;14976:12;14940:50;15009:22;;15062:4;15054:13;;15050:27;-1:-1:-1;15040:55:35;;15091:1;15088;15081:12;15040:55;15120:2;15114:9;15145:48;15161:31;15189:2;15161:31;:::i;15145:48::-;15216:2;15209:5;15202:17;15256:7;15251:2;15246;15242;15238:11;15234:20;15231:33;15228:53;;;15277:1;15274;15267:12;15228:53;15290:54;15341:2;15336;15329:5;15325:14;15320:2;15316;15312:11;15290:54;:::i;15379:219::-;15528:2;15517:9;15510:21;15491:4;15548:44;15588:2;15577:9;15573:18;15565:6;15548:44;:::i;15603:135::-;15642:3;15663:17;;;15660:43;;15683:18;;:::i;:::-;-1:-1:-1;15730:1:35;15719:13;;15603:135::o;17112:894::-;17206:6;17259:2;17247:9;17238:7;17234:23;17230:32;17227:52;;;17275:1;17272;17265:12;17227:52;17315:9;17302:23;17344:18;17385:2;17377:6;17374:14;17371:34;;;17401:1;17398;17391:12;17371:34;17424:22;;;;17480:4;17462:16;;;17458:27;17455:47;;;17498:1;17495;17488:12;17455:47;17531:4;17525:11;17575:4;17567:6;17563:17;17630:6;17618:10;17615:22;17610:2;17598:10;17595:18;17592:46;17589:72;;;17641:18;;:::i;:::-;17677:4;17670:24;17719:16;;17747;;;17744:36;;;17776:1;17773;17766:12;17744:36;17804:44;17840:7;17829:8;17825:2;17821:17;17804:44;:::i;:::-;17796:6;17789:60;;17892:2;17888;17884:11;17871:25;17858:38;;17905:31;17930:5;17905:31;:::i;:::-;17964:2;17952:15;;17945:30;;;;-1:-1:-1;17956:6:35;17112:894;-1:-1:-1;;;17112:894:35:o;18011:274::-;18140:3;18178:6;18172:13;18194:53;18240:6;18235:3;18228:4;18220:6;18216:17;18194:53;:::i;:::-;18263:16;;;;;18011:274;-1:-1:-1;;18011:274:35:o;18621:231::-;18661:4;-1:-1:-1;;;;;18759:10:35;;;;18729;;18781:12;;;18778:38;;;18796:18;;:::i;:::-;18833:13;;18621:231;-1:-1:-1;;;18621:231:35:o;18857:238::-;18897:3;-1:-1:-1;;;;;18964:10:35;;;18994;;;19024:12;;;19016:21;;19013:47;;;19040:18;;:::i;:::-;19076:13;;18857:238;-1:-1:-1;;;;18857:238:35:o;19100:474::-;19299:2;19288:9;19281:21;19262:4;19337:6;19331:13;19380:4;19375:2;19364:9;19360:18;19353:32;19408:50;19454:2;19443:9;19439:18;19425:12;19408:50;:::i;:::-;19518:2;19506:15;;;;19500:22;-1:-1:-1;;;;;19496:48:35;19489:4;19474:20;;;;19467:78;;;;-1:-1:-1;19394:64:35;;19100:474;-1:-1:-1;19100:474:35:o;19579:568::-;-1:-1:-1;;;;;19868:15:35;;;19850:34;;19927:14;;19920:22;19915:2;19900:18;;19893:50;19974:2;19959:18;;19952:34;;;20022:15;;20017:2;20002:18;;19995:43;19830:3;20069;20054:19;;20047:32;;;19793:4;;20096:45;;20121:19;;20113:6;20096:45;:::i;:::-;20088:53;19579:568;-1:-1:-1;;;;;;;19579:568:35:o;20152:243::-;20229:6;20237;20290:2;20278:9;20269:7;20265:23;20261:32;20258:52;;;20306:1;20303;20296:12;20258:52;-1:-1:-1;;20329:16:35;;20385:2;20370:18;;;20364:25;20329:16;;20364:25;;-1:-1:-1;20152:243:35:o;20400:136::-;20435:3;-1:-1:-1;;;20456:22:35;;20453:48;;20481:18;;:::i;:::-;-1:-1:-1;20521:1:35;20517:13;;20400:136::o;20541:128::-;20581:3;20612:1;20608:6;20605:1;20602:13;20599:39;;;20618:18;;:::i;:::-;-1:-1:-1;20654:9:35;;20541:128::o;20953:277::-;21020:6;21073:2;21061:9;21052:7;21048:23;21044:32;21041:52;;;21089:1;21086;21079:12;21041:52;21121:9;21115:16;21174:5;21167:13;21160:21;21153:5;21150:32;21140:60;;21196:1;21193;21186:12",
    "linkReferences": {},
    "immutableReferences": {
      "9396": [
        {
          "start": 661,
          "length": 32
        },
        {
          "start": 4088,
          "length": 32
        },
        {
          "start": 6080,
          "length": 32
        }
      ],
      "9400": [
        {
          "start": 274,
          "length": 32
        },
        {
          "start": 477,
          "length": 32
        },
        {
          "start": 1287,
          "length": 32
        },
        {
          "start": 1501,
          "length": 32
        },
        {
          "start": 1666,
          "length": 32
        },
        {
          "start": 1880,
          "length": 32
        },
        {
          "start": 5691,
          "length": 32
        },
        {
          "start": 5761,
          "length": 32
        },
        {
          "start": 5910,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH9()": "4aa4a4fc",
    "exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
    "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
    "exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
    "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
    "factory()": "c45a0155",
    "multicall(bytes[])": "ac9650d8",
    "refundETH()": "12210e8a",
    "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
    "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
    "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
    "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a",
    "sweepToken(address,uint256,address)": "df2ab5bb",
    "sweepTokenWithFee(address,uint256,address,uint256,address)": "e0e189a0",
    "uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33",
    "unwrapWETH9(uint256,address)": "49404b7c",
    "unwrapWETH9WithFee(uint256,address,uint256,address)": "9b2c0a37"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"sweepTokenWithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeBips\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeRecipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9WithFee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\"}},\"stateVariables\":{\"DEFAULT_AMOUNT_IN_CACHED\":{\"details\":\"Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap can never actually be this value\"},\"amountInCached\":{\"details\":\"Transient storage variable used for returning the computed amount in for an exact output swap.\"}},\"title\":\"Uniswap V3 Swap Router\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"sweepTokenWithFee(address,uint256,address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"},\"unwrapWETH9WithFee(uint256,address,uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient\"}},\"notice\":\"Router for stateless execution of swaps against Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/modified_uniswap/v3-periphery-modified/SwapRouterModified.sol\":\"SwapRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":v3-core/=lib/v3-core/contracts/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0x44300341eb97e8790e56e0823e8c3d09695fc2ee80555a83a9585f307381f324\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fef226efeb89359aa20c577531a59c9fd8ad7abc22060364234269d5546b8f93\",\"dweb:/ipfs/QmXzNH1GMb7NxiEUFisywBAidE9vVcjAiGRE2gh4cZQKPQ\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e\",\"dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV\"]},\"lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol\":{\"keccak256\":\"0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa\",\"dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea\",\"dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp\"]},\"lib/v3-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869\",\"dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c\",\"dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS\"]},\"lib/v3-periphery/contracts/base/BlockTimestamp.sol\":{\"keccak256\":\"0xec031d21f3edd6dd656900b7575d794a267a2594ac27b881546e2ffb1161c9f9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0db5df546317a54302ea32442298d56bb03a4105de9ec42b0ae96d576a73c3f6\",\"dweb:/ipfs/QmWUfrtJo9oadEjohm9yd8F8WcTGjoz9yKA1AzRCVksC2p\"]},\"lib/v3-periphery/contracts/base/Multicall.sol\":{\"keccak256\":\"0xd4ea1fcc8d797eb11d7162039d83637ea7430f37edfc2c457a1e852ef70ea877\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://761feb7c43002a2ea4318317319dacb1f721222394c95db0887f09228aecc6b6\",\"dweb:/ipfs/QmYVtEUMbk4sSRSFKuiMtSGGfRiXWT1Zvnnim2AsjMQErQ\"]},\"lib/v3-periphery/contracts/base/PeripheryImmutableState.sol\":{\"keccak256\":\"0xeb81416b3899bbbb1960728c345ddb7b1e13f3ba236243d78de13ac54fcddc07\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://96c5511cab4eeb333da9e8eb85464f9391c71578dffcb2d59c79aa69f4ea7f03\",\"dweb:/ipfs/QmU2d18TKPRk3xN8rUqJUbiNEEQjVZY6X6fbnPyVQwRQLx\"]},\"lib/v3-periphery/contracts/base/PeripheryPayments.sol\":{\"keccak256\":\"0xd6129c6c9605d84b2a205eaec18a25090c4002be7c54da3cee61b84a882b820b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://db1a47eaa47416ee2d1f4b9a988e02687579ac2280bd1ce28a52758e7eaabc44\",\"dweb:/ipfs/QmcWrSBBRCay6SqWTt1kh4gfDFn2jQBtNZGQ6zk7vfZdNy\"]},\"lib/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x45f7c9f873ab66e588c25a579ad2fe0db90e98a424675551acb3d54e343bcc74\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e8f08c1c59cd172b288f103cc167ccb63784a89aef819de8725d6bd45dffbb\",\"dweb:/ipfs/QmXa1DA8UnQY8L63Przw2R7yLHZ93udBLVmHddQBfXQUwd\"]},\"lib/v3-periphery/contracts/base/PeripheryValidation.sol\":{\"keccak256\":\"0xdb92575277ee95a5b14f2736eda1cc743ee24977885c1caee6f8fbb6b2714f25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://04c49d1f5d290f232db9d487773e22adfd7087c5fd55044fedce91e70b782eb4\",\"dweb:/ipfs/QmW61hmov7uZak3qhjyGhF3jKxfcmchC9sASrbbcmBkUid\"]},\"lib/v3-periphery/contracts/base/SelfPermit.sol\":{\"keccak256\":\"0xb3357756b67cd51dd55c77a9009830662aef963c8edf0846df6ee686e2269d52\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c14a14e958650325ec9562e3514ef4a988cfa3a78bd5353c31208a0d7ff9d891\",\"dweb:/ipfs/QmXeSkwmr981KanbmSY6FfqNFPc8H9hGyt1B2RiXRyTC24\"]},\"lib/v3-periphery/contracts/interfaces/IMulticall.sol\":{\"keccak256\":\"0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016\",\"dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f\",\"dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407\",\"dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp\"]},\"lib/v3-periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol\":{\"keccak256\":\"0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768\",\"dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY\"]},\"lib/v3-periphery/contracts/interfaces/ISelfPermit.sol\":{\"keccak256\":\"0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678\",\"dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb\"]},\"lib/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/v3-periphery/contracts/interfaces/external/IERC20PermitAllowed.sol\":{\"keccak256\":\"0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d\",\"dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2\"]},\"lib/v3-periphery/contracts/interfaces/external/IWETH9.sol\":{\"keccak256\":\"0xfec32491485cbd9ce047b9219d6386b55900835f1844e8fd490837e2ee2d48c9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c07191aff851079a37d92b1ad970b565e5280bd122663e2a8bce9c17553c7167\",\"dweb:/ipfs/QmYKZrys4rtfmwPGKw5Fq1iFB5eD1CrsjQurWEVfQscULZ\"]},\"lib/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0xe78ae657b6c570ba9b200c7cbf1247a12dbce044aad00f55593ba5260df9a021\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6223e440df28c090bbdb1440c8c3cf60cb9af3924f59bec52993b305937a43d3\",\"dweb:/ipfs/QmbWzweApMJEJqZdxb2PQZK8dhsCKYiEraoswMhBxSdkMN\"]},\"lib/v3-periphery/contracts/libraries/CallbackValidation.sol\":{\"keccak256\":\"0xf061bffcb6d30572349597816a8b413267d14898cbab08ed74921c0deab7565d\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ab6e8cfb9b721f178422c57d68988d7d3e531663f15c846028169f60c7704eb0\",\"dweb:/ipfs/Qmdz7r4TmDbsRLy6jXqG3MKxwmS6gKBdSjxzqRMGm111MB\"]},\"lib/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\"lib/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"keccak256\":\"0x901a2f3b28117445e92fbe30ff5a5bfb551b02fe6d70154d1800e12236526464\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f721ba98ea2204d17fbc6329bd09a2e5a858a3c4872dde7e1e2d66510772a04f\",\"dweb:/ipfs/QmeC7JiQkW4A9XwApNEw1dXFa9gQeJZzJzb6rp1WHrXfpu\"]},\"lib/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7\",\"dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw\"]},\"test/modified_uniswap/v3-periphery-modified/SwapRouterModified.sol\":{\"keccak256\":\"0xeaf74362b702510c15832e148685a659d3e7dc1c6720fe3241744b46d202f752\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://44c5417bcb94895e66bfecb2112e6eb42872b8aafba4e04009a9ec948a3a057a\",\"dweb:/ipfs/QmPiczphgrKkdzncEQnzYPRiRjfTDN7JpFEwYVSaab91Kp\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_WETH9",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH9",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactInputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactInputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "path",
                  "type": "bytes"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutput",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ISwapRouter.ExactOutputSingleParams",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amountInMaximum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "exactOutputSingle",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "refundETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitAllowedIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "selfPermitIfNecessary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sweepTokenWithFee"
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "amount0Delta",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "amount1Delta",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "uniswapV3SwapCallback"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountMinimum",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "feeBips",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "feeRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "unwrapWETH9WithFee"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
            },
            "returns": {
              "amountOut": "The amount of the received token"
            }
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "params": {
              "params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "params": {
              "params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
            },
            "returns": {
              "amountIn": "The amount of the input token"
            }
          },
          "multicall(bytes[])": {
            "details": "The `msg.value` should not be trusted for any method callable from multicall.",
            "params": {
              "data": "The encoded function data for each of the calls to make to this contract"
            },
            "returns": {
              "results": "The results from each of the calls passed in via data"
            }
          },
          "refundETH()": {
            "details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this).",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this)",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
            "params": {
              "expiry": "The timestamp at which the permit is no longer valid",
              "nonce": "The current nonce of the owner",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
            }
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
            "params": {
              "deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
              "r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
              "s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
              "token": "The address of the token spent",
              "v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
              "value": "The amount that can be spent of token"
            }
          },
          "sweepToken(address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
            "params": {
              "amountMinimum": "The minimum amount of token required for a transfer",
              "recipient": "The destination address of the token",
              "token": "The contract address of the token which will be transferred to `recipient`"
            }
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
            "params": {
              "amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
              "amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
              "data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
            }
          },
          "unwrapWETH9(uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
            "params": {
              "amountMinimum": "The minimum amount of WETH9 to unwrap",
              "recipient": "The address receiving ETH"
            }
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "exactInput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
          },
          "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps `amountIn` of one token for as much as possible of another token"
          },
          "exactOutput((bytes,address,uint256,uint256,uint256))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
          },
          "exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
            "notice": "Swaps as little as possible of one token for `amountOut` of another token"
          },
          "multicall(bytes[])": {
            "notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
          },
          "refundETH()": {
            "notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
          },
          "selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
          },
          "selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
            "notice": "Permits this contract to spend a given token from `msg.sender`"
          },
          "sweepToken(address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient"
          },
          "sweepTokenWithFee(address,uint256,address,uint256,address)": {
            "notice": "Transfers the full amount of a token held by this contract to recipient, with a percentage between 0 (exclusive) and 1 (inclusive) going to feeRecipient"
          },
          "uniswapV3SwapCallback(int256,int256,bytes)": {
            "notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
          },
          "unwrapWETH9(uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
          },
          "unwrapWETH9WithFee(uint256,address,uint256,address)": {
            "notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH, with a percentage between 0 (exclusive), and 1 (inclusive) going to feeRecipient"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "v3-core/=lib/v3-core/contracts/",
        "v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/modified_uniswap/v3-periphery-modified/SwapRouterModified.sol": "SwapRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
        "urls": [
          "bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
          "dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0x44300341eb97e8790e56e0823e8c3d09695fc2ee80555a83a9585f307381f324",
        "urls": [
          "bzz-raw://fef226efeb89359aa20c577531a59c9fd8ad7abc22060364234269d5546b8f93",
          "dweb:/ipfs/QmXzNH1GMb7NxiEUFisywBAidE9vVcjAiGRE2gh4cZQKPQ"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0x4e64844c56061cd90e0a80de73534a9166704c43eed579eb83f90bc2780ce968",
        "urls": [
          "bzz-raw://cba4fab5cebdddf644b901994a7f0f52b98885d4c56012f4dc51d52c2bf9de0e",
          "dweb:/ipfs/QmVyyrRmqXrAiapewWunRVgiPVFJHpH2hKiE1py1svMSNV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolErrors.sol": {
        "keccak256": "0xf80abf13fb1fafc127ba4e792f240dd8ea7c8c893978cdfd8439c27fae9a037b",
        "urls": [
          "bzz-raw://b04fc72a656bbf3631e9c2e67b9870a2d9d235185e833fe050e9606e6816a9aa",
          "dweb:/ipfs/QmUcz4bkEkJ9pwzFu1C3n97hBQ3st9U6qTAqCdyFwddKco"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x44fa2ce1182f6c2f6bead3d1737804bf7e112252ae86e0f2e92f9b8249603f43",
        "urls": [
          "bzz-raw://54154e8665b98d65f5dc91b256551852cb47882180b501b260657122d207c0ea",
          "dweb:/ipfs/QmcfemK1A2PXYrWB5SBFGERpMCderbFRb8BtTzQDj1sUBp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0x4c12bf820c0b011f5490a209960ca34dd8af34660ef9e01de0438393d15e3fd8",
        "urls": [
          "bzz-raw://fed11489e218e55d087d42b4f350a30e10cd2aedec8f432bd3cc712f648d5869",
          "dweb:/ipfs/QmWfRnRxyXwHUDcTQPazxYYk5jxErGeQqdvnYtyg5nBPbU"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x5c57de03a91cc2ec8939865dbbcb0197bb6c353b711075eefd8e0fca5e102129",
        "urls": [
          "bzz-raw://1e994c24fd891ef8a3f5dbf5eba42b34feaf05e0376a29f91322faa18054449c",
          "dweb:/ipfs/QmNdUJGUQxd1dPkMbnA5f5UNqakxRkQE5r7bTZJAuHeapS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/BlockTimestamp.sol": {
        "keccak256": "0xec031d21f3edd6dd656900b7575d794a267a2594ac27b881546e2ffb1161c9f9",
        "urls": [
          "bzz-raw://0db5df546317a54302ea32442298d56bb03a4105de9ec42b0ae96d576a73c3f6",
          "dweb:/ipfs/QmWUfrtJo9oadEjohm9yd8F8WcTGjoz9yKA1AzRCVksC2p"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/Multicall.sol": {
        "keccak256": "0xd4ea1fcc8d797eb11d7162039d83637ea7430f37edfc2c457a1e852ef70ea877",
        "urls": [
          "bzz-raw://761feb7c43002a2ea4318317319dacb1f721222394c95db0887f09228aecc6b6",
          "dweb:/ipfs/QmYVtEUMbk4sSRSFKuiMtSGGfRiXWT1Zvnnim2AsjMQErQ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/PeripheryImmutableState.sol": {
        "keccak256": "0xeb81416b3899bbbb1960728c345ddb7b1e13f3ba236243d78de13ac54fcddc07",
        "urls": [
          "bzz-raw://96c5511cab4eeb333da9e8eb85464f9391c71578dffcb2d59c79aa69f4ea7f03",
          "dweb:/ipfs/QmU2d18TKPRk3xN8rUqJUbiNEEQjVZY6X6fbnPyVQwRQLx"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/PeripheryPayments.sol": {
        "keccak256": "0xd6129c6c9605d84b2a205eaec18a25090c4002be7c54da3cee61b84a882b820b",
        "urls": [
          "bzz-raw://db1a47eaa47416ee2d1f4b9a988e02687579ac2280bd1ce28a52758e7eaabc44",
          "dweb:/ipfs/QmcWrSBBRCay6SqWTt1kh4gfDFn2jQBtNZGQ6zk7vfZdNy"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol": {
        "keccak256": "0x45f7c9f873ab66e588c25a579ad2fe0db90e98a424675551acb3d54e343bcc74",
        "urls": [
          "bzz-raw://f7e8f08c1c59cd172b288f103cc167ccb63784a89aef819de8725d6bd45dffbb",
          "dweb:/ipfs/QmXa1DA8UnQY8L63Przw2R7yLHZ93udBLVmHddQBfXQUwd"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/PeripheryValidation.sol": {
        "keccak256": "0xdb92575277ee95a5b14f2736eda1cc743ee24977885c1caee6f8fbb6b2714f25",
        "urls": [
          "bzz-raw://04c49d1f5d290f232db9d487773e22adfd7087c5fd55044fedce91e70b782eb4",
          "dweb:/ipfs/QmW61hmov7uZak3qhjyGhF3jKxfcmchC9sASrbbcmBkUid"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/base/SelfPermit.sol": {
        "keccak256": "0xb3357756b67cd51dd55c77a9009830662aef963c8edf0846df6ee686e2269d52",
        "urls": [
          "bzz-raw://c14a14e958650325ec9562e3514ef4a988cfa3a78bd5353c31208a0d7ff9d891",
          "dweb:/ipfs/QmXeSkwmr981KanbmSY6FfqNFPc8H9hGyt1B2RiXRyTC24"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/IMulticall.sol": {
        "keccak256": "0xa8f9d0061ee730a522dc4bae6bd5cabb3e997e2c5983da183e912bdca93dfa7b",
        "urls": [
          "bzz-raw://496b68d4f72d58cc83cf51bd9cc9c99aaa46dc3c3df7c951a9e50ba29ee33016",
          "dweb:/ipfs/Qmc3bkXwuRP8mDpcKgvLgbCKn8tD8PGCaBjnLHSPMJCRGD"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol": {
        "keccak256": "0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d",
        "urls": [
          "bzz-raw://e16b291294210e71cb0f20cd0afe62ae2dc6878d627f5ccc19c4dc9cd80aec3f",
          "dweb:/ipfs/QmQGitSyBr26nour81BZmpmDMyJpvZRqHQZvnCD1Acb127"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/IPeripheryPayments.sol": {
        "keccak256": "0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274",
        "urls": [
          "bzz-raw://f9a90f58f5fd5fb42f7811f4094113b532f307b14a73764c91f977590747f407",
          "dweb:/ipfs/QmSeNH2mfiDMKf3Q6V2sqtNxx1s72JNuA1VVxRM9HoMqYp"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/IPeripheryPaymentsWithFee.sol": {
        "keccak256": "0x23ebe0ced112c7ca3869868874b691fcbb50f90c482580dc9ebe718bda34edfc",
        "urls": [
          "bzz-raw://689ebfcb90a26bf31af6e35456e41940c23d145cfc59d1ae5f6fa060945dd768",
          "dweb:/ipfs/QmZxVsaUWqnEEsRcphuWBvuEExQxznztSmFUkMa5ks8AHY"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISelfPermit.sol": {
        "keccak256": "0xe1a1c072855e687c90317c15b9b6ce81cc683723f73d70e47b40f2f9bad0c2be",
        "urls": [
          "bzz-raw://53b0881a1c55254d157054bd3d1c86982c0f5429bd2a9986c15479f6b71ef678",
          "dweb:/ipfs/Qmc9WZqXzQmqsA3xYxojbx9nXcG3FGuwAjM3opEmRGSnBb"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/external/IERC20PermitAllowed.sol": {
        "keccak256": "0x8c4c1b8e724e0a78cb691d703dd37cd91b8bd6600537fb227807a194025a792d",
        "urls": [
          "bzz-raw://783be851155842a02cdb0483c3a69ecc0e7ae8545f65cec1d4aeb355b2026a7d",
          "dweb:/ipfs/QmZNBQosTjpGNKB3Eo2K6Zzye7FYiLVoEki5iPB2Y69jz2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/interfaces/external/IWETH9.sol": {
        "keccak256": "0xfec32491485cbd9ce047b9219d6386b55900835f1844e8fd490837e2ee2d48c9",
        "urls": [
          "bzz-raw://c07191aff851079a37d92b1ad970b565e5280bd122663e2a8bce9c17553c7167",
          "dweb:/ipfs/QmYKZrys4rtfmwPGKw5Fq1iFB5eD1CrsjQurWEVfQscULZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/BytesLib.sol": {
        "keccak256": "0xe78ae657b6c570ba9b200c7cbf1247a12dbce044aad00f55593ba5260df9a021",
        "urls": [
          "bzz-raw://6223e440df28c090bbdb1440c8c3cf60cb9af3924f59bec52993b305937a43d3",
          "dweb:/ipfs/QmbWzweApMJEJqZdxb2PQZK8dhsCKYiEraoswMhBxSdkMN"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/CallbackValidation.sol": {
        "keccak256": "0xf061bffcb6d30572349597816a8b413267d14898cbab08ed74921c0deab7565d",
        "urls": [
          "bzz-raw://ab6e8cfb9b721f178422c57d68988d7d3e531663f15c846028169f60c7704eb0",
          "dweb:/ipfs/Qmdz7r4TmDbsRLy6jXqG3MKxwmS6gKBdSjxzqRMGm111MB"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/Path.sol": {
        "keccak256": "0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61",
        "urls": [
          "bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3",
          "dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/PoolAddress.sol": {
        "keccak256": "0x901a2f3b28117445e92fbe30ff5a5bfb551b02fe6d70154d1800e12236526464",
        "urls": [
          "bzz-raw://f721ba98ea2204d17fbc6329bd09a2e5a858a3c4872dde7e1e2d66510772a04f",
          "dweb:/ipfs/QmeC7JiQkW4A9XwApNEw1dXFa9gQeJZzJzb6rp1WHrXfpu"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x32821db2a308f45fe9fe64a3c9c7413626ea5aa8eb884a31256b3c19296597d2",
        "urls": [
          "bzz-raw://6983a3e5a1bd61ad733c5ccfe2f32480569d4cc0ce4d1280aa51eb8f5272a5b7",
          "dweb:/ipfs/QmdidqggXGVE5XCsKQWSRmtMcLjgbz2dpzoL7grDZWPtuw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/modified_uniswap/v3-periphery-modified/SwapRouterModified.sol": {
        "keccak256": "0xeaf74362b702510c15832e148685a659d3e7dc1c6720fe3241744b46d202f752",
        "urls": [
          "bzz-raw://44c5417bcb94895e66bfecb2112e6eb42872b8aafba4e04009a9ec948a3a057a",
          "dweb:/ipfs/QmPiczphgrKkdzncEQnzYPRiRjfTDN7JpFEwYVSaab91Kp"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/modified_uniswap/v3-periphery-modified/SwapRouterModified.sol",
    "id": 11560,
    "exportedSymbols": {
      "BlockTimestamp": [
        9301
      ],
      "BytesLib": [
        10391
      ],
      "CallbackValidation": [
        10456
      ],
      "IERC20": [
        8141
      ],
      "IERC20Permit": [
        8177
      ],
      "IERC20PermitAllowed": [
        10273
      ],
      "IMulticall": [
        10006
      ],
      "IPeripheryImmutableState": [
        10022
      ],
      "IPeripheryPayments": [
        10048
      ],
      "IPeripheryPaymentsWithFee": [
        10081
      ],
      "ISelfPermit": [
        10149
      ],
      "ISwapRouter": [
        10249
      ],
      "IUniswapV3Pool": [
        8209
      ],
      "IUniswapV3PoolActions": [
        8319
      ],
      "IUniswapV3PoolDerivedState": [
        8350
      ],
      "IUniswapV3PoolErrors": [
        8378
      ],
      "IUniswapV3PoolEvents": [
        8497
      ],
      "IUniswapV3PoolImmutables": [
        8537
      ],
      "IUniswapV3PoolOwnerActions": [
        8563
      ],
      "IUniswapV3PoolState": [
        8671
      ],
      "IUniswapV3SwapCallback": [
        8223
      ],
      "IWETH9": [
        10290
      ],
      "Multicall": [
        9386
      ],
      "Path": [
        10589
      ],
      "PeripheryImmutableState": [
        9417
      ],
      "PeripheryPayments": [
        9627
      ],
      "PeripheryPaymentsWithFee": [
        9804
      ],
      "PeripheryValidation": [
        9824
      ],
      "PoolAddress": [
        10714
      ],
      "SafeCast": [
        8741
      ],
      "SelfPermit": [
        9991
      ],
      "SwapRouter": [
        11559
      ],
      "TickMath": [
        9287
      ],
      "TransferHelper": [
        10885
      ],
      "console": [
        8063
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:9787:34",
    "nodes": [
      {
        "id": 10887,
        "nodeType": "PragmaDirective",
        "src": "45:24:34",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 10888,
        "nodeType": "PragmaDirective",
        "src": "70:19:34",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 10889,
        "nodeType": "ImportDirective",
        "src": "91:40:34",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/libraries/SafeCast.sol",
        "file": "v3-core/libraries/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 8742,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10890,
        "nodeType": "ImportDirective",
        "src": "132:40:34",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/libraries/TickMath.sol",
        "file": "v3-core/libraries/TickMath.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10891,
        "nodeType": "ImportDirective",
        "src": "173:47:34",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "v3-core/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 8210,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10892,
        "nodeType": "ImportDirective",
        "src": "222:49:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "v3-periphery/interfaces/ISwapRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 10250,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10893,
        "nodeType": "ImportDirective",
        "src": "272:55:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/base/PeripheryImmutableState.sol",
        "file": "v3-periphery/base/PeripheryImmutableState.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9418,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10894,
        "nodeType": "ImportDirective",
        "src": "328:51:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/base/PeripheryValidation.sol",
        "file": "v3-periphery/base/PeripheryValidation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9825,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10895,
        "nodeType": "ImportDirective",
        "src": "380:56:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/base/PeripheryPaymentsWithFee.sol",
        "file": "v3-periphery/base/PeripheryPaymentsWithFee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9805,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10896,
        "nodeType": "ImportDirective",
        "src": "437:41:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/base/Multicall.sol",
        "file": "v3-periphery/base/Multicall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9387,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10897,
        "nodeType": "ImportDirective",
        "src": "479:42:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/base/SelfPermit.sol",
        "file": "v3-periphery/base/SelfPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 9992,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10898,
        "nodeType": "ImportDirective",
        "src": "522:41:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/Path.sol",
        "file": "v3-periphery/libraries/Path.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 10590,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10899,
        "nodeType": "ImportDirective",
        "src": "564:48:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/PoolAddress.sol",
        "file": "v3-periphery/libraries/PoolAddress.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 10715,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10900,
        "nodeType": "ImportDirective",
        "src": "613:55:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/CallbackValidation.sol",
        "file": "v3-periphery/libraries/CallbackValidation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 10457,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 10901,
        "nodeType": "ImportDirective",
        "src": "669:53:34",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/interfaces/external/IWETH9.sol",
        "file": "v3-periphery/interfaces/external/IWETH9.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 11560,
        "sourceUnit": 10291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 11559,
        "nodeType": "ContractDefinition",
        "src": "829:9002:34",
        "nodes": [
          {
            "id": 10917,
            "nodeType": "UsingForDirective",
            "src": "989:21:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 10915,
              "name": "Path",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10589,
              "src": "995:4:34"
            },
            "typeName": {
              "id": 10916,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1004:5:34",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 10920,
            "nodeType": "UsingForDirective",
            "src": "1015:27:34",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 10918,
              "name": "SafeCast",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8741,
              "src": "1021:8:34"
            },
            "typeName": {
              "id": 10919,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1034:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 10928,
            "nodeType": "VariableDeclaration",
            "src": "1208:69:34",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 10921,
              "nodeType": "StructuredDocumentation",
              "src": "1048:155:34",
              "text": "@dev Used as the placeholder value for amountInCached, because the computed amount in for an exact output swap\n can never actually be this value"
            },
            "mutability": "constant",
            "name": "DEFAULT_AMOUNT_IN_CACHED",
            "nameLocation": "1233:24:34",
            "scope": 11559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10922,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1208:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "arguments": [
                  {
                    "id": 10925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "1265:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 10924,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1265:7:34",
                      "typeDescriptions": {}
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    }
                  ],
                  "id": 10923,
                  "name": "type",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -27,
                  "src": "1260:4:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                    "typeString": "function () pure"
                  }
                },
                "id": 10926,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "functionCall",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "1260:13:34",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_meta_type_t_uint256",
                  "typeString": "type(uint256)"
                }
              },
              "id": 10927,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "max",
              "nodeType": "MemberAccess",
              "src": "1260:17:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10932,
            "nodeType": "VariableDeclaration",
            "src": "1392:57:34",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 10929,
              "nodeType": "StructuredDocumentation",
              "src": "1284:103:34",
              "text": "@dev Transient storage variable used for returning the computed amount in for an exact output swap."
            },
            "mutability": "mutable",
            "name": "amountInCached",
            "nameLocation": "1408:14:34",
            "scope": 11559,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 10930,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1392:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 10931,
              "name": "DEFAULT_AMOUNT_IN_CACHED",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 10928,
              "src": "1425:24:34",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 10944,
            "nodeType": "FunctionDefinition",
            "src": "1456:112:34",
            "nodes": [],
            "body": {
              "id": 10943,
              "nodeType": "Block",
              "src": "1566:2:34",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10939,
                    "name": "_factory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10934,
                    "src": "1548:8:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 10940,
                    "name": "_WETH9",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10936,
                    "src": "1558:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 10941,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10938,
                  "name": "PeripheryImmutableState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9417,
                  "src": "1524:23:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "1524:41:34"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10934,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1485:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 10944,
                  "src": "1477:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10936,
                  "mutability": "mutable",
                  "name": "_WETH9",
                  "nameLocation": "1511:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 10944,
                  "src": "1503:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:56:34"
            },
            "returnParameters": {
              "id": 10942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1566:0:34"
            },
            "scope": 11559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10971,
            "nodeType": "FunctionDefinition",
            "src": "1678:349:34",
            "nodes": [],
            "body": {
              "id": 10970,
              "nodeType": "Block",
              "src": "1807:220:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10960,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9396,
                            "src": "1916:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 10963,
                                "name": "tokenA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10947,
                                "src": "1968:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10964,
                                "name": "tokenB",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10949,
                                "src": "1976:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 10965,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10951,
                                "src": "1984:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              ],
                              "expression": {
                                "id": 10961,
                                "name": "PoolAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10714,
                                "src": "1945:11:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_PoolAddress_$10714_$",
                                  "typeString": "type(library PoolAddress)"
                                }
                              },
                              "id": 10962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getPoolKey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10635,
                              "src": "1945:22:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$10603_memory_ptr_$",
                                "typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
                              }
                            },
                            "id": 10966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1945:43:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolKey_$10603_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_PoolKey_$10603_memory_ptr",
                              "typeString": "struct PoolAddress.PoolKey memory"
                            }
                          ],
                          "expression": {
                            "id": 10958,
                            "name": "PoolAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10714,
                            "src": "1868:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PoolAddress_$10714_$",
                              "typeString": "type(library PoolAddress)"
                            }
                          },
                          "id": 10959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "computeAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10713,
                          "src": "1868:26:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$10603_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (address)"
                          }
                        },
                        "id": 10967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1868:138:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10957,
                      "name": "IUniswapV3Pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8209,
                      "src": "1836:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$8209_$",
                        "typeString": "type(contract IUniswapV3Pool)"
                      }
                    },
                    "id": 10968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1836:184:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "functionReturnParameters": 10956,
                  "id": 10969,
                  "nodeType": "Return",
                  "src": "1817:203:34"
                }
              ]
            },
            "documentation": {
              "id": 10945,
              "nodeType": "StructuredDocumentation",
              "src": "1574:99:34",
              "text": "@dev Returns the pool for the given token pair and fee. The pool contract may or may not exist."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPool",
            "nameLocation": "1687:7:34",
            "parameters": {
              "id": 10952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10947,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "1712:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "1704:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10949,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "1736:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "1728:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1728:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10951,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "1759:3:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "1752:10:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 10950,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1694:74:34"
            },
            "returnParameters": {
              "id": 10956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10971,
                  "src": "1791:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                    "typeString": "contract IUniswapV3Pool"
                  },
                  "typeName": {
                    "id": 10954,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10953,
                      "name": "IUniswapV3Pool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 8209,
                      "src": "1791:14:34"
                    },
                    "referencedDeclaration": 8209,
                    "src": "1791:14:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:16:34"
            },
            "scope": 11559,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 10976,
            "nodeType": "StructDefinition",
            "src": "2033:74:34",
            "nodes": [],
            "canonicalName": "SwapRouter.SwapCallbackData",
            "members": [
              {
                "constant": false,
                "id": 10973,
                "mutability": "mutable",
                "name": "path",
                "nameLocation": "2073:4:34",
                "nodeType": "VariableDeclaration",
                "scope": 10976,
                "src": "2067:10:34",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 10972,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "2067:5:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10975,
                "mutability": "mutable",
                "name": "payer",
                "nameLocation": "2095:5:34",
                "nodeType": "VariableDeclaration",
                "scope": 10976,
                "src": "2087:13:34",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 10974,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2087:7:34",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "SwapCallbackData",
            "nameLocation": "2040:16:34",
            "scope": 11559,
            "visibility": "public"
          },
          {
            "id": 11107,
            "nodeType": "FunctionDefinition",
            "src": "2156:1300:34",
            "nodes": [],
            "body": {
              "id": 11106,
              "nodeType": "Block",
              "src": "2299:1157:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 10990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10988,
                            "name": "amount0Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10979,
                            "src": "2317:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2332:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2317:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 10993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10991,
                            "name": "amount1Delta",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10981,
                            "src": "2337:12:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 10992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2352:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2337:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2317:36:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10987,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2309:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:45:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10996,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:45:34"
                },
                {
                  "assignments": [
                    10999
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10999,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "2451:4:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2427:28:34",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                        "typeString": "struct SwapRouter.SwapCallbackData"
                      },
                      "typeName": {
                        "id": 10998,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10997,
                          "name": "SwapCallbackData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10976,
                          "src": "2427:16:34"
                        },
                        "referencedDeclaration": 10976,
                        "src": "2427:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$10976_storage_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11006,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11002,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10983,
                        "src": "2469:5:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 11003,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10976,
                            "src": "2477:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          }
                        ],
                        "id": 11004,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2476:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                          "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 11000,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2458:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 11001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2458:10:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 11005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:37:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2427:68:34"
                },
                {
                  "assignments": [
                    11008,
                    11010,
                    11012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11008,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "2514:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2506:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2506:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11010,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "2531:8:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2523:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11009,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2523:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11012,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2548:3:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2541:10:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 11011,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "2541:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11017,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 11013,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10999,
                          "src": "2555:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 11014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10973,
                        "src": "2555:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 11015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10555,
                      "src": "2555:51:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 11016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2555:53:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2505:103:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11021,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9396,
                        "src": "2652:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11022,
                        "name": "tokenIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11008,
                        "src": "2661:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11023,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11010,
                        "src": "2670:8:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11024,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11012,
                        "src": "2680:3:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 11018,
                        "name": "CallbackValidation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10456,
                        "src": "2618:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallbackValidation_$10456_$",
                          "typeString": "type(library CallbackValidation)"
                        }
                      },
                      "id": 11020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "verifyCallback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10422,
                      "src": "2618:33:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$8209_$",
                        "typeString": "function (address,address,address,uint24) view returns (contract IUniswapV3Pool)"
                      }
                    },
                    "id": 11025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:66:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                      "typeString": "contract IUniswapV3Pool"
                    }
                  },
                  "id": 11026,
                  "nodeType": "ExpressionStatement",
                  "src": "2618:66:34"
                },
                {
                  "assignments": [
                    11028,
                    11030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11028,
                      "mutability": "mutable",
                      "name": "isExactInput",
                      "nameLocation": "2701:12:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2696:17:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11027,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2696:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11030,
                      "mutability": "mutable",
                      "name": "amountToPay",
                      "nameLocation": "2723:11:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11106,
                      "src": "2715:19:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11029,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11051,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 11033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 11031,
                        "name": "amount0Delta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10979,
                        "src": "2738:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 11032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2753:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2738:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11042,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11010,
                            "src": "2828:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 11043,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11008,
                            "src": "2839:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2828:18:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 11047,
                              "name": "amount1Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10981,
                              "src": "2856:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 11046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2848:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 11045,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2848:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2848:21:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11049,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2827:43:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "id": 11050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2738:132:34",
                    "trueExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11034,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11008,
                            "src": "2770:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 11035,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11010,
                            "src": "2780:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2770:18:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 11039,
                              "name": "amount0Delta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10979,
                              "src": "2798:12:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 11038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2790:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 11037,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2790:7:34",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2790:21:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11041,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2769:43:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                      "typeString": "tuple(bool,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2695:175:34"
                },
                {
                  "condition": {
                    "id": 11052,
                    "name": "isExactInput",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11028,
                    "src": "2884:12:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11104,
                    "nodeType": "Block",
                    "src": "2978:472:34",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 11063,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10999,
                                "src": "3048:4:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 11064,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10973,
                              "src": "3048:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 11065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10503,
                            "src": "3048:26:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 11066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3048:28:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 11102,
                          "nodeType": "Block",
                          "src": "3221:219:34",
                          "statements": [
                            {
                              "expression": {
                                "id": 11087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 11085,
                                  "name": "amountInCached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10932,
                                  "src": "3239:14:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 11086,
                                  "name": "amountToPay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11030,
                                  "src": "3256:11:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3239:28:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11088,
                              "nodeType": "ExpressionStatement",
                              "src": "3239:28:34"
                            },
                            {
                              "expression": {
                                "id": 11091,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 11089,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11008,
                                  "src": "3285:7:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 11090,
                                  "name": "tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11010,
                                  "src": "3295:8:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3285:18:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 11092,
                              "nodeType": "ExpressionStatement",
                              "src": "3285:18:34"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 11094,
                                    "name": "tokenIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11008,
                                    "src": "3380:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 11095,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10999,
                                      "src": "3389:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                        "typeString": "struct SwapRouter.SwapCallbackData memory"
                                      }
                                    },
                                    "id": 11096,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "payer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10975,
                                    "src": "3389:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 11097,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3401:3:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 11098,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3401:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 11099,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11030,
                                    "src": "3413:11:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 11093,
                                  "name": "pay",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9626,
                                  "src": "3376:3:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,address,uint256)"
                                  }
                                },
                                "id": 11100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3376:49:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 11101,
                              "nodeType": "ExpressionStatement",
                              "src": "3376:49:34"
                            }
                          ]
                        },
                        "id": 11103,
                        "nodeType": "IfStatement",
                        "src": "3044:396:34",
                        "trueBody": {
                          "id": 11084,
                          "nodeType": "Block",
                          "src": "3078:137:34",
                          "statements": [
                            {
                              "expression": {
                                "id": 11074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 11067,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10999,
                                    "src": "3096:4:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  },
                                  "id": 11069,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10973,
                                  "src": "3096:9:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 11070,
                                        "name": "data",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10999,
                                        "src": "3108:4:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                                        }
                                      },
                                      "id": 11071,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10973,
                                      "src": "3108:9:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 11072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10588,
                                    "src": "3108:19:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 11073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3108:21:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "3096:33:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 11075,
                              "nodeType": "ExpressionStatement",
                              "src": "3096:33:34"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 11077,
                                    "name": "amountToPay",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11030,
                                    "src": "3167:11:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 11078,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3180:3:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 11079,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3180:10:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 11080,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3192:1:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 11081,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10999,
                                    "src": "3195:4:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                      "typeString": "struct SwapRouter.SwapCallbackData memory"
                                    }
                                  ],
                                  "id": 11076,
                                  "name": "exactOutputInternal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11462,
                                  "src": "3147:19:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$10976_memory_ptr_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                                  }
                                },
                                "id": 11082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3147:53:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11083,
                              "nodeType": "ExpressionStatement",
                              "src": "3147:53:34"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 11105,
                  "nodeType": "IfStatement",
                  "src": "2880:570:34",
                  "trueBody": {
                    "id": 11062,
                    "nodeType": "Block",
                    "src": "2898:74:34",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11054,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11008,
                              "src": "2916:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 11055,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10999,
                                "src": "2925:4:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              },
                              "id": 11056,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "payer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10975,
                              "src": "2925:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 11057,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2937:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11058,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2937:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11059,
                              "name": "amountToPay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11030,
                              "src": "2949:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11053,
                            "name": "pay",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9626,
                            "src": "2912:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256)"
                            }
                          },
                          "id": 11060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2912:49:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11061,
                        "nodeType": "ExpressionStatement",
                        "src": "2912:49:34"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              8222
            ],
            "documentation": {
              "id": 10977,
              "nodeType": "StructuredDocumentation",
              "src": "2113:38:34",
              "text": "@inheritdoc IUniswapV3SwapCallback"
            },
            "functionSelector": "fa461e33",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uniswapV3SwapCallback",
            "nameLocation": "2165:21:34",
            "overrides": {
              "id": 10985,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2290:8:34"
            },
            "parameters": {
              "id": 10984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10979,
                  "mutability": "mutable",
                  "name": "amount0Delta",
                  "nameLocation": "2203:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "2196:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10978,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10981,
                  "mutability": "mutable",
                  "name": "amount1Delta",
                  "nameLocation": "2232:12:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "2225:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 10980,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2225:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10983,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2269:5:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "2254:20:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10982,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2186:94:34"
            },
            "returnParameters": {
              "id": 10986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:34"
            },
            "scope": 11559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11201,
            "nodeType": "FunctionDefinition",
            "src": "3510:1002:34",
            "nodes": [],
            "body": {
              "id": 11200,
              "nodeType": "Block",
              "src": "3706:806:34",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11122,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11112,
                      "src": "3783:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3804:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3796:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3796:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3796:10:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3783:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11135,
                  "nodeType": "IfStatement",
                  "src": "3779:54:34",
                  "trueBody": {
                    "expression": {
                      "id": 11133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 11128,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11112,
                        "src": "3808:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 11131,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3828:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$11559",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$11559",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 11130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3820:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11129,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3820:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3820:13:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3808:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11134,
                    "nodeType": "ExpressionStatement",
                    "src": "3808:25:34"
                  }
                },
                {
                  "assignments": [
                    11137,
                    11139,
                    11141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11137,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "3853:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "3845:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3845:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11139,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "3870:8:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "3862:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11138,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3862:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11141,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "3887:3:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "3880:10:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 11140,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "3880:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11146,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 11142,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11117,
                          "src": "3894:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 11143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10973,
                        "src": "3894:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 11144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10555,
                      "src": "3894:51:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 11145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3894:53:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3844:103:34"
                },
                {
                  "assignments": [
                    11148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11148,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nameLocation": "3963:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "3958:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11147,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3958:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11152,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11149,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11137,
                      "src": "3976:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11150,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11139,
                      "src": "3986:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3976:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3958:36:34"
                },
                {
                  "assignments": [
                    11154,
                    11156
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11154,
                      "mutability": "mutable",
                      "name": "amount0",
                      "nameLocation": "4013:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "4006:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 11153,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4006:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11156,
                      "mutability": "mutable",
                      "name": "amount1",
                      "nameLocation": "4029:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11200,
                      "src": "4022:14:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 11155,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4022:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11189,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11163,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11112,
                        "src": "4090:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11164,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11148,
                        "src": "4113:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 11165,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11110,
                            "src": "4137:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 11166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toInt256",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8740,
                          "src": "4137:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (int256)"
                          }
                        },
                        "id": 11167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4137:19:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 11170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11168,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11114,
                            "src": "4170:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4191:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4170:22:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 11182,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11114,
                          "src": "4388:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 11183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "4170:235:34",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 11171,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11148,
                                "src": "4233:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 11179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 11176,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9287,
                                    "src": "4324:8:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$9287_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 11177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8766,
                                  "src": "4324:23:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 11178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4350:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4324:27:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 11180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4233:118:34",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 11175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 11172,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9287,
                                    "src": "4270:8:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$9287_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 11173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8762,
                                  "src": "4270:23:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 11174,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4296:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "4270:27:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 11181,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4211:158:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11186,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11117,
                            "src": "4430:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 11184,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4419:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4419:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4419:16:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11158,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11137,
                            "src": "4048:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11159,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11139,
                            "src": "4057:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11160,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11141,
                            "src": "4067:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 11157,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10971,
                          "src": "4040:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$8209_$",
                            "typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
                          }
                        },
                        "id": 11161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4040:31:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 11162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8300,
                      "src": "4040:36:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 11188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:405:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4005:440:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "4471:33:34",
                        "subExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 11192,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11148,
                                "src": "4473:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 11194,
                                "name": "amount0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11154,
                                "src": "4496:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "id": 11195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "4473:30:34",
                              "trueExpression": {
                                "id": 11193,
                                "name": "amount1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11156,
                                "src": "4486:7:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "id": 11196,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4472:32:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 11191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4463:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 11190,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4463:7:34",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 11198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4463:42:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 11121,
                  "id": 11199,
                  "nodeType": "Return",
                  "src": "4456:49:34"
                }
              ]
            },
            "documentation": {
              "id": 11108,
              "nodeType": "StructuredDocumentation",
              "src": "3462:43:34",
              "text": "@dev Performs a single exact input swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactInputInternal",
            "nameLocation": "3519:18:34",
            "parameters": {
              "id": 11118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11110,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3555:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11201,
                  "src": "3547:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11112,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "3581:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11201,
                  "src": "3573:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11114,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nameLocation": "3608:17:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11201,
                  "src": "3600:25:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 11113,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "3600:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11117,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3659:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11201,
                  "src": "3635:28:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 11116,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11115,
                      "name": "SwapCallbackData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10976,
                      "src": "3635:16:34"
                    },
                    "referencedDeclaration": 10976,
                    "src": "3635:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3537:132:34"
            },
            "returnParameters": {
              "id": 11121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11120,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "3695:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11201,
                  "src": "3687:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3687:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3686:19:34"
            },
            "scope": 11559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11248,
            "nodeType": "FunctionDefinition",
            "src": "4550:685:34",
            "nodes": [],
            "body": {
              "id": 11247,
              "nodeType": "Block",
              "src": "4759:476:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11215,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "4769:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11217,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11205,
                            "src": "4813:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 11218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountIn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10168,
                          "src": "4813:15:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 11219,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11205,
                            "src": "4842:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 11220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10164,
                          "src": "4842:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 11221,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11205,
                            "src": "4872:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 11222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10172,
                          "src": "4872:24:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 11226,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11205,
                                    "src": "4989:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 11227,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10158,
                                  "src": "4989:14:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11228,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11205,
                                    "src": "5025:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 11229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10162,
                                  "src": "5025:10:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11230,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11205,
                                    "src": "5057:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                                    }
                                  },
                                  "id": 11231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10160,
                                  "src": "5057:15:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 11224,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "4951:3:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 11225,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "4951:16:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 11232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4951:139:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 11233,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5115:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5115:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11223,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10976,
                            "src": "4910:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 11235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "4910:230:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 11216,
                        "name": "exactInputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11201,
                        "src": "4781:18:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$10976_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 11236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4781:369:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4769:381:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11238,
                  "nodeType": "ExpressionStatement",
                  "src": "4769:381:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11240,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11213,
                          "src": "5168:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 11241,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11205,
                            "src": "5181:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                            }
                          },
                          "id": 11242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10170,
                          "src": "5181:23:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5168:36:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 11244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5206:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 11239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5160:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5160:68:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11246,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:68:34"
                }
              ]
            },
            "baseFunctions": [
              10182
            ],
            "documentation": {
              "id": 11202,
              "nodeType": "StructuredDocumentation",
              "src": "4518:27:34",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "414bf389",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 11209,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11205,
                      "src": "4702:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams calldata"
                      }
                    },
                    "id": 11210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10166,
                    "src": "4702:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11211,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11208,
                  "name": "checkDeadline",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9823,
                  "src": "4688:13:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "4688:30:34"
              }
            ],
            "name": "exactInputSingle",
            "nameLocation": "4559:16:34",
            "overrides": {
              "id": 11207,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4671:8:34"
            },
            "parameters": {
              "id": 11206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11205,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "4617:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11248,
                  "src": "4585:38:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactInputSingleParams"
                  },
                  "typeName": {
                    "id": 11204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11203,
                      "name": "ExactInputSingleParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10173,
                      "src": "4585:22:34"
                    },
                    "referencedDeclaration": 10173,
                    "src": "4585:22:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$10173_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:54:34"
            },
            "returnParameters": {
              "id": 11214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11213,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "4744:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11248,
                  "src": "4736:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4736:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4735:19:34"
            },
            "scope": 11559,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11337,
            "nodeType": "FunctionDefinition",
            "src": "5273:1289:34",
            "nodes": [],
            "body": {
              "id": 11336,
              "nodeType": "Block",
              "src": "5468:1094:34",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    11263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11263,
                      "mutability": "mutable",
                      "name": "payer",
                      "nameLocation": "5486:5:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11336,
                      "src": "5478:13:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11262,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5478:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11266,
                  "initialValue": {
                    "expression": {
                      "id": 11264,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5494:3:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 11265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5494:10:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5478:26:34"
                },
                {
                  "body": {
                    "id": 11326,
                    "nodeType": "Block",
                    "src": "5565:912:34",
                    "statements": [
                      {
                        "assignments": [
                          11269
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 11269,
                            "mutability": "mutable",
                            "name": "hasMultiplePools",
                            "nameLocation": "5584:16:34",
                            "nodeType": "VariableDeclaration",
                            "scope": 11326,
                            "src": "5579:21:34",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 11268,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5579:4:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 11274,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 11270,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11252,
                                "src": "5603:6:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputParams memory"
                                }
                              },
                              "id": 11271,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "path",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10184,
                              "src": "5603:11:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 11272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hasMultiplePools",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10503,
                            "src": "5603:28:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (bool)"
                            }
                          },
                          "id": 11273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5603:30:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5579:54:34"
                      },
                      {
                        "expression": {
                          "id": 11298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 11275,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11252,
                              "src": "5727:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputParams memory"
                              }
                            },
                            "id": 11277,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10190,
                            "src": "5727:15:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 11279,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11252,
                                  "src": "5781:6:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                    "typeString": "struct ISwapRouter.ExactInputParams memory"
                                  }
                                },
                                "id": 11280,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "amountIn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10190,
                                "src": "5781:15:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "condition": {
                                  "id": 11281,
                                  "name": "hasMultiplePools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11269,
                                  "src": "5814:16:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseExpression": {
                                  "expression": {
                                    "id": 11286,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11252,
                                    "src": "5849:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 11287,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recipient",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10186,
                                  "src": "5849:16:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 11288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "Conditional",
                                "src": "5814:51:34",
                                "trueExpression": {
                                  "arguments": [
                                    {
                                      "id": 11284,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5841:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$11559",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$11559",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 11283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5833:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 11282,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5833:7:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 11285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5833:13:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 11289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5934:1:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "expression": {
                                          "id": 11291,
                                          "name": "params",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11252,
                                          "src": "5998:6:34",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                            "typeString": "struct ISwapRouter.ExactInputParams memory"
                                          }
                                        },
                                        "id": 11292,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "path",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 10184,
                                        "src": "5998:11:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 11293,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getFirstPool",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10570,
                                      "src": "5998:24:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 11294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5998:26:34",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  {
                                    "id": 11295,
                                    "name": "payer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11263,
                                    "src": "6101:5:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 11290,
                                  "name": "SwapCallbackData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10976,
                                  "src": "5953:16:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                                    "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                                  }
                                },
                                "id": 11296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [
                                  "path",
                                  "payer"
                                ],
                                "nodeType": "FunctionCall",
                                "src": "5953:172:34",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                                  "typeString": "struct SwapRouter.SwapCallbackData memory"
                                }
                              ],
                              "id": 11278,
                              "name": "exactInputInternal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11201,
                              "src": "5745:18:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$10976_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                              }
                            },
                            "id": 11297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5745:394:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5727:412:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11299,
                        "nodeType": "ExpressionStatement",
                        "src": "5727:412:34"
                      },
                      {
                        "condition": {
                          "id": 11300,
                          "name": "hasMultiplePools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11269,
                          "src": "6213:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 11324,
                          "nodeType": "Block",
                          "src": "6384:83:34",
                          "statements": [
                            {
                              "expression": {
                                "id": 11321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 11318,
                                  "name": "amountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11260,
                                  "src": "6402:9:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 11319,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11252,
                                    "src": "6414:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 11320,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amountIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10190,
                                  "src": "6414:15:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6402:27:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11322,
                              "nodeType": "ExpressionStatement",
                              "src": "6402:27:34"
                            },
                            {
                              "id": 11323,
                              "nodeType": "Break",
                              "src": "6447:5:34"
                            }
                          ]
                        },
                        "id": 11325,
                        "nodeType": "IfStatement",
                        "src": "6209:258:34",
                        "trueBody": {
                          "id": 11317,
                          "nodeType": "Block",
                          "src": "6231:147:34",
                          "statements": [
                            {
                              "expression": {
                                "id": 11306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 11301,
                                  "name": "payer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11263,
                                  "src": "6249:5:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 11304,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6265:4:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SwapRouter_$11559",
                                        "typeString": "contract SwapRouter"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SwapRouter_$11559",
                                        "typeString": "contract SwapRouter"
                                      }
                                    ],
                                    "id": 11303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6257:7:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 11302,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6257:7:34",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 11305,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6257:13:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6249:21:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 11307,
                              "nodeType": "ExpressionStatement",
                              "src": "6249:21:34"
                            },
                            {
                              "expression": {
                                "id": 11315,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 11308,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11252,
                                    "src": "6326:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputParams memory"
                                    }
                                  },
                                  "id": 11310,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "path",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10184,
                                  "src": "6326:11:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "expression": {
                                        "id": 11311,
                                        "name": "params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11252,
                                        "src": "6340:6:34",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                                          "typeString": "struct ISwapRouter.ExactInputParams memory"
                                        }
                                      },
                                      "id": 11312,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "path",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 10184,
                                      "src": "6340:11:34",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 11313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "skipToken",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10588,
                                    "src": "6340:21:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 11314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6340:23:34",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "6326:37:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 11316,
                              "nodeType": "ExpressionStatement",
                              "src": "6326:37:34"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 11267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5559:4:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 11327,
                  "nodeType": "WhileStatement",
                  "src": "5552:925:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11329,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11260,
                          "src": "6495:9:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 11330,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11252,
                            "src": "6508:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputParams memory"
                            }
                          },
                          "id": 11331,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOutMinimum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10192,
                          "src": "6508:23:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6495:36:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206c6974746c65207265636569766564",
                        "id": 11333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6533:21:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        },
                        "value": "Too little received"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f037a9cbca9be03859489f289f0cf5f85c0414bbfdd9785bc7ab31bd734e249c",
                          "typeString": "literal_string \"Too little received\""
                        }
                      ],
                      "id": 11328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6487:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6487:68:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11335,
                  "nodeType": "ExpressionStatement",
                  "src": "6487:68:34"
                }
              ]
            },
            "baseFunctions": [
              10202
            ],
            "documentation": {
              "id": 11249,
              "nodeType": "StructuredDocumentation",
              "src": "5241:27:34",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "c04b8d59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 11256,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11252,
                      "src": "5411:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputParams memory"
                      }
                    },
                    "id": 11257,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10188,
                    "src": "5411:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11258,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11255,
                  "name": "checkDeadline",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9823,
                  "src": "5397:13:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "5397:30:34"
              }
            ],
            "name": "exactInput",
            "nameLocation": "5282:10:34",
            "overrides": {
              "id": 11254,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5380:8:34"
            },
            "parameters": {
              "id": 11253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11252,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "5326:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11337,
                  "src": "5302:30:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactInputParams_$10193_memory_ptr",
                    "typeString": "struct ISwapRouter.ExactInputParams"
                  },
                  "typeName": {
                    "id": 11251,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11250,
                      "name": "ExactInputParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10193,
                      "src": "5302:16:34"
                    },
                    "referencedDeclaration": 10193,
                    "src": "5302:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputParams_$10193_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactInputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5292:46:34"
            },
            "returnParameters": {
              "id": 11261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11260,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "5453:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11337,
                  "src": "5445:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5444:19:34"
            },
            "scope": 11559,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11462,
            "nodeType": "FunctionDefinition",
            "src": "6617:1496:34",
            "nodes": [],
            "body": {
              "id": 11461,
              "nodeType": "Block",
              "src": "6814:1299:34",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11352,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11342,
                      "src": "6891:9:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 11355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6912:1:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 11354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6904:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 11353,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6904:7:34",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 11356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6904:10:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6891:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11365,
                  "nodeType": "IfStatement",
                  "src": "6887:54:34",
                  "trueBody": {
                    "expression": {
                      "id": 11363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 11358,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11342,
                        "src": "6916:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "id": 11361,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6936:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapRouter_$11559",
                              "typeString": "contract SwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapRouter_$11559",
                              "typeString": "contract SwapRouter"
                            }
                          ],
                          "id": 11360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6928:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 11359,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6928:7:34",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 11362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6928:13:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6916:25:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11364,
                    "nodeType": "ExpressionStatement",
                    "src": "6916:25:34"
                  }
                },
                {
                  "assignments": [
                    11367,
                    11369,
                    11371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11367,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "6961:8:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "6953:16:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11366,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6953:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11369,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "6979:7:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "6971:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 11368,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6971:7:34",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11371,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "6995:3:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "6988:10:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 11370,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "6988:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11376,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 11372,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11347,
                          "src": "7002:4:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        },
                        "id": 11373,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "path",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10973,
                        "src": "7002:22:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 11374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeFirstPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10555,
                      "src": "7002:51:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (address,address,uint24)"
                      }
                    },
                    "id": 11375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7002:53:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
                      "typeString": "tuple(address,address,uint24)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6952:103:34"
                },
                {
                  "assignments": [
                    11378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11378,
                      "mutability": "mutable",
                      "name": "zeroForOne",
                      "nameLocation": "7071:10:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "7066:15:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11377,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7066:4:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11382,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11379,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11369,
                      "src": "7084:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 11380,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11367,
                      "src": "7094:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7084:18:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7066:36:34"
                },
                {
                  "assignments": [
                    11384,
                    11386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11384,
                      "mutability": "mutable",
                      "name": "amount0Delta",
                      "nameLocation": "7121:12:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "7114:19:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 11383,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7114:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 11386,
                      "mutability": "mutable",
                      "name": "amount1Delta",
                      "nameLocation": "7142:12:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "7135:19:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 11385,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7135:6:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11420,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11393,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11342,
                        "src": "7258:9:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11394,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "7285:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 11398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "-",
                        "prefix": true,
                        "src": "7313:21:34",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 11395,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11340,
                              "src": "7314:9:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 11396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "toInt256",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8740,
                            "src": "7314:18:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (int256)"
                            }
                          },
                          "id": 11397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7314:20:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          "id": 11401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11399,
                            "name": "sqrtPriceLimitX96",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11344,
                            "src": "7352:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint160",
                              "typeString": "uint160"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 11400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7373:1:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7352:22:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "id": 11413,
                          "name": "sqrtPriceLimitX96",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11344,
                          "src": "7594:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "id": 11414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "7352:259:34",
                        "trueExpression": {
                          "components": [
                            {
                              "condition": {
                                "id": 11402,
                                "name": "zeroForOne",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11378,
                                "src": "7423:10:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 11410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 11407,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9287,
                                    "src": "7522:8:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$9287_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 11408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MAX_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8766,
                                  "src": "7522:23:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 11409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7548:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7522:27:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "id": 11411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "7423:126:34",
                              "trueExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                },
                                "id": 11406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 11403,
                                    "name": "TickMath",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9287,
                                    "src": "7464:8:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_TickMath_$9287_$",
                                      "typeString": "type(library TickMath)"
                                    }
                                  },
                                  "id": 11404,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "MIN_SQRT_RATIO",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 8762,
                                  "src": "7464:23:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint160",
                                    "typeString": "uint160"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 11405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7490:1:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "src": "7464:27:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint160",
                                  "typeString": "uint160"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "id": 11412,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7397:174:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 11417,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11347,
                            "src": "7640:4:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                              "typeString": "struct SwapRouter.SwapCallbackData memory"
                            }
                          ],
                          "expression": {
                            "id": 11415,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7629:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 11416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7629:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 11418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7629:16:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 11388,
                            "name": "tokenIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11369,
                            "src": "7179:7:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11389,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11367,
                            "src": "7200:8:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 11390,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11371,
                            "src": "7222:3:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "id": 11387,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10971,
                          "src": "7158:7:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$8209_$",
                            "typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
                          }
                        },
                        "id": 11391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7158:77:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$8209",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 11392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8300,
                      "src": "7158:82:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
                        "typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
                      }
                    },
                    "id": 11419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7158:501:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
                      "typeString": "tuple(int256,int256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7113:546:34"
                },
                {
                  "assignments": [
                    11422
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11422,
                      "mutability": "mutable",
                      "name": "amountOutReceived",
                      "nameLocation": "7678:17:34",
                      "nodeType": "VariableDeclaration",
                      "scope": 11461,
                      "src": "7670:25:34",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11421,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7670:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11423,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7670:25:34"
                },
                {
                  "expression": {
                    "id": 11449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 11424,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11350,
                          "src": "7706:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 11425,
                          "name": "amountOutReceived",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11422,
                          "src": "7716:17:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 11426,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7705:29:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 11427,
                        "name": "zeroForOne",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11378,
                        "src": "7737:10:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 11440,
                                "name": "amount1Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11386,
                                "src": "7833:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 11439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7825:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 11438,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7825:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7825:21:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7856:13:34",
                                "subExpression": {
                                  "id": 11444,
                                  "name": "amount0Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11384,
                                  "src": "7857:12:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 11443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7848:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 11442,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7848:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7848:22:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11447,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7824:47:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 11448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "7737:134:34",
                      "trueExpression": {
                        "components": [
                          {
                            "arguments": [
                              {
                                "id": 11430,
                                "name": "amount0Delta",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11384,
                                "src": "7771:12:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 11429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7763:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 11428,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7763:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7763:21:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 11435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "-",
                                "prefix": true,
                                "src": "7794:13:34",
                                "subExpression": {
                                  "id": 11434,
                                  "name": "amount1Delta",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11386,
                                  "src": "7795:12:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              ],
                              "id": 11433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7786:7:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 11432,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7786:7:34",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 11436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7786:22:34",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 11437,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7762:47:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "7705:166:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11450,
                  "nodeType": "ExpressionStatement",
                  "src": "7705:166:34"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    },
                    "id": 11453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11451,
                      "name": "sqrtPriceLimitX96",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11344,
                      "src": "8043:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8064:1:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8043:22:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11460,
                  "nodeType": "IfStatement",
                  "src": "8039:67:34",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11455,
                            "name": "amountOutReceived",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11422,
                            "src": "8075:17:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 11456,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11340,
                            "src": "8096:9:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8075:30:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 11454,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -18,
                          -18
                        ],
                        "referencedDeclaration": -18,
                        "src": "8067:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                          "typeString": "function (bool) pure"
                        }
                      },
                      "id": 11458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8067:39:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 11459,
                    "nodeType": "ExpressionStatement",
                    "src": "8067:39:34"
                  }
                }
              ]
            },
            "documentation": {
              "id": 11338,
              "nodeType": "StructuredDocumentation",
              "src": "6568:44:34",
              "text": "@dev Performs a single exact output swap"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exactOutputInternal",
            "nameLocation": "6626:19:34",
            "parameters": {
              "id": 11348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11340,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "6663:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11462,
                  "src": "6655:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6655:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11342,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6690:9:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11462,
                  "src": "6682:17:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11341,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6682:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11344,
                  "mutability": "mutable",
                  "name": "sqrtPriceLimitX96",
                  "nameLocation": "6717:17:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11462,
                  "src": "6709:25:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint160",
                    "typeString": "uint160"
                  },
                  "typeName": {
                    "id": 11343,
                    "name": "uint160",
                    "nodeType": "ElementaryTypeName",
                    "src": "6709:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint160",
                      "typeString": "uint160"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11347,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6768:4:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11462,
                  "src": "6744:28:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                    "typeString": "struct SwapRouter.SwapCallbackData"
                  },
                  "typeName": {
                    "id": 11346,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11345,
                      "name": "SwapCallbackData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10976,
                      "src": "6744:16:34"
                    },
                    "referencedDeclaration": 10976,
                    "src": "6744:16:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SwapCallbackData_$10976_storage_ptr",
                      "typeString": "struct SwapRouter.SwapCallbackData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6645:133:34"
            },
            "returnParameters": {
              "id": 11351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11350,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "6804:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11462,
                  "src": "6796:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11349,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6796:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6795:18:34"
            },
            "scope": 11559,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 11513,
            "nodeType": "FunctionDefinition",
            "src": "8151:870:34",
            "nodes": [],
            "body": {
              "id": 11512,
              "nodeType": "Block",
              "src": "8361:660:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 11498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11476,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11474,
                      "src": "8427:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 11478,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11466,
                            "src": "8471:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 11479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountOut",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10214,
                          "src": "8471:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 11480,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11466,
                            "src": "8501:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 11481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recipient",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10210,
                          "src": "8501:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 11482,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11466,
                            "src": "8531:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 11483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sqrtPriceLimitX96",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10218,
                          "src": "8531:24:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 11487,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11466,
                                    "src": "8648:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 11488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10206,
                                  "src": "8648:15:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11489,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11466,
                                    "src": "8685:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 11490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "fee",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10208,
                                  "src": "8685:10:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 11491,
                                    "name": "params",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11466,
                                    "src": "8717:6:34",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                                    }
                                  },
                                  "id": 11492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenIn",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 10204,
                                  "src": "8717:14:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 11485,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "8610:3:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 11486,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "8610:16:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 11493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8610:139:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 11494,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "8774:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 11495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "8774:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11484,
                            "name": "SwapCallbackData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10976,
                            "src": "8569:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                              "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                            }
                          },
                          "id": 11496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "path",
                            "payer"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "8569:230:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint160",
                            "typeString": "uint160"
                          },
                          {
                            "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                            "typeString": "struct SwapRouter.SwapCallbackData memory"
                          }
                        ],
                        "id": 11477,
                        "name": "exactOutputInternal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11462,
                        "src": "8438:19:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$10976_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                        }
                      },
                      "id": 11497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8438:371:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8427:382:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11499,
                  "nodeType": "ExpressionStatement",
                  "src": "8427:382:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11501,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11474,
                          "src": "8828:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 11502,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11466,
                            "src": "8840:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                            }
                          },
                          "id": 11503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10216,
                          "src": "8840:22:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8828:34:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 11505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8864:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 11500,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8820:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8820:65:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11507,
                  "nodeType": "ExpressionStatement",
                  "src": "8820:65:34"
                },
                {
                  "expression": {
                    "id": 11510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11508,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10932,
                      "src": "8973:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11509,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10928,
                      "src": "8990:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8973:41:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11511,
                  "nodeType": "ExpressionStatement",
                  "src": "8973:41:34"
                }
              ]
            },
            "baseFunctions": [
              10228
            ],
            "documentation": {
              "id": 11463,
              "nodeType": "StructuredDocumentation",
              "src": "8119:27:34",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "db3e2198",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 11470,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11466,
                      "src": "8305:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams calldata"
                      }
                    },
                    "id": 11471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10212,
                    "src": "8305:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11472,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11469,
                  "name": "checkDeadline",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9823,
                  "src": "8291:13:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "8291:30:34"
              }
            ],
            "name": "exactOutputSingle",
            "nameLocation": "8160:17:34",
            "overrides": {
              "id": 11468,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8274:8:34"
            },
            "parameters": {
              "id": 11467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11466,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "8220:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8187:39:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                  },
                  "typeName": {
                    "id": 11465,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11464,
                      "name": "ExactOutputSingleParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10219,
                      "src": "8187:23:34"
                    },
                    "referencedDeclaration": 10219,
                    "src": "8187:23:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$10219_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8177:55:34"
            },
            "returnParameters": {
              "id": 11475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11474,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "8347:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11513,
                  "src": "8339:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8339:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8338:18:34"
            },
            "scope": 11559,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 11558,
            "nodeType": "FunctionDefinition",
            "src": "9059:770:34",
            "nodes": [],
            "body": {
              "id": 11557,
              "nodeType": "Block",
              "src": "9257:572:34",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11528,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11517,
                          "src": "9519:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 11529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10236,
                        "src": "9519:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 11530,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11517,
                          "src": "9549:6:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                          }
                        },
                        "id": 11531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "recipient",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10232,
                        "src": "9549:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 11532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9579:1:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 11534,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11517,
                              "src": "9618:6:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                                "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                              }
                            },
                            "id": 11535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "path",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10230,
                            "src": "9618:11:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 11536,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9638:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 11537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9638:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 11533,
                          "name": "SwapCallbackData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10976,
                          "src": "9594:16:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_SwapCallbackData_$10976_storage_ptr_$",
                            "typeString": "type(struct SwapRouter.SwapCallbackData storage pointer)"
                          }
                        },
                        "id": 11538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "path",
                          "payer"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "9594:56:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_struct$_SwapCallbackData_$10976_memory_ptr",
                          "typeString": "struct SwapRouter.SwapCallbackData memory"
                        }
                      ],
                      "id": 11527,
                      "name": "exactOutputInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11462,
                      "src": "9486:19:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_uint160_$_t_struct$_SwapCallbackData_$10976_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (uint256,address,uint160,struct SwapRouter.SwapCallbackData memory) returns (uint256)"
                      }
                    },
                    "id": 11539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9486:174:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11540,
                  "nodeType": "ExpressionStatement",
                  "src": "9486:174:34"
                },
                {
                  "expression": {
                    "id": 11543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11541,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11525,
                      "src": "9671:8:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11542,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10932,
                      "src": "9682:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9671:25:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11544,
                  "nodeType": "ExpressionStatement",
                  "src": "9671:25:34"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11546,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11525,
                          "src": "9714:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 11547,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11517,
                            "src": "9726:6:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                              "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                            }
                          },
                          "id": 11548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amountInMaximum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10238,
                          "src": "9726:22:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9714:34:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d75636820726571756573746564",
                        "id": 11550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9750:20:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        },
                        "value": "Too much requested"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5c1362ddf12293b907d8907d79f16e40792a7ddc4f09ee6d70cfec4ad443305",
                          "typeString": "literal_string \"Too much requested\""
                        }
                      ],
                      "id": 11545,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9706:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9706:65:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11552,
                  "nodeType": "ExpressionStatement",
                  "src": "9706:65:34"
                },
                {
                  "expression": {
                    "id": 11555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11553,
                      "name": "amountInCached",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10932,
                      "src": "9781:14:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11554,
                      "name": "DEFAULT_AMOUNT_IN_CACHED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10928,
                      "src": "9798:24:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9781:41:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 11556,
                  "nodeType": "ExpressionStatement",
                  "src": "9781:41:34"
                }
              ]
            },
            "baseFunctions": [
              10248
            ],
            "documentation": {
              "id": 11514,
              "nodeType": "StructuredDocumentation",
              "src": "9027:27:34",
              "text": "@inheritdoc ISwapRouter"
            },
            "functionSelector": "f28c0498",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 11521,
                      "name": "params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11517,
                      "src": "9201:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputParams calldata"
                      }
                    },
                    "id": 11522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "deadline",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 10234,
                    "src": "9201:15:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 11523,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11520,
                  "name": "checkDeadline",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9823,
                  "src": "9187:13:34"
                },
                "nodeType": "ModifierInvocation",
                "src": "9187:30:34"
              }
            ],
            "name": "exactOutput",
            "nameLocation": "9068:11:34",
            "overrides": {
              "id": 11519,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9170:8:34"
            },
            "parameters": {
              "id": 11518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11517,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "9116:6:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11558,
                  "src": "9089:33:34",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExactOutputParams_$10239_calldata_ptr",
                    "typeString": "struct ISwapRouter.ExactOutputParams"
                  },
                  "typeName": {
                    "id": 11516,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11515,
                      "name": "ExactOutputParams",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10239,
                      "src": "9089:17:34"
                    },
                    "referencedDeclaration": 10239,
                    "src": "9089:17:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputParams_$10239_storage_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputParams"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9079:49:34"
            },
            "returnParameters": {
              "id": 11526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11525,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "9243:8:34",
                  "nodeType": "VariableDeclaration",
                  "scope": 11558,
                  "src": "9235:16:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9235:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9234:18:34"
            },
            "scope": 11559,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10903,
              "name": "ISwapRouter",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10249,
              "src": "856:11:34"
            },
            "id": 10904,
            "nodeType": "InheritanceSpecifier",
            "src": "856:11:34"
          },
          {
            "baseName": {
              "id": 10905,
              "name": "PeripheryImmutableState",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9417,
              "src": "873:23:34"
            },
            "id": 10906,
            "nodeType": "InheritanceSpecifier",
            "src": "873:23:34"
          },
          {
            "baseName": {
              "id": 10907,
              "name": "PeripheryValidation",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9824,
              "src": "902:19:34"
            },
            "id": 10908,
            "nodeType": "InheritanceSpecifier",
            "src": "902:19:34"
          },
          {
            "baseName": {
              "id": 10909,
              "name": "PeripheryPaymentsWithFee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9804,
              "src": "927:24:34"
            },
            "id": 10910,
            "nodeType": "InheritanceSpecifier",
            "src": "927:24:34"
          },
          {
            "baseName": {
              "id": 10911,
              "name": "Multicall",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9386,
              "src": "957:9:34"
            },
            "id": 10912,
            "nodeType": "InheritanceSpecifier",
            "src": "957:9:34"
          },
          {
            "baseName": {
              "id": 10913,
              "name": "SelfPermit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9991,
              "src": "972:10:34"
            },
            "id": 10914,
            "nodeType": "InheritanceSpecifier",
            "src": "972:10:34"
          }
        ],
        "canonicalName": "SwapRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10902,
          "nodeType": "StructuredDocumentation",
          "src": "724:105:34",
          "text": "@title Uniswap V3 Swap Router\n @notice Router for stateless execution of swaps against Uniswap V3"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          11559,
          9991,
          10149,
          9386,
          10006,
          9804,
          10081,
          9627,
          9824,
          9417,
          10022,
          10048,
          9301,
          10249,
          8223
        ],
        "name": "SwapRouter",
        "nameLocation": "838:10:34",
        "scope": 11560,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 34
}